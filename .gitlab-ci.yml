image: openjdk:8-jdk

variables:
  GODOT_ZIP: "godot_3.2.2-beta4_linux_headless.zip"
  GODOT_EXC: "godot_editor/Godot_v3.2.2-beta4_linux_headless.64"
  GODOT_DOWNLOAD_URL: "https://downloads.tuxfamily.org/godotengine/3.2.2/beta4/Godot_v3.2.2-beta4_linux_headless.64.zip"
  GODOT_EXPORT_TEMPLATES: "https://downloads.tuxfamily.org/godotengine/3.2.2/beta4/Godot_v3.2.2-beta4_export_templates.tpz"
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.3"
  ANDROID_SDK_TOOLS:   "6514223"

before_script:
  - pwd
  - export DOCKER_HOME=$PWD
  - export GODOT_VERSION=3.2.2-beta4
  # Locale must be set or else it will cause additional errors for Godot 
  - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y locales
  - sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
  - dpkg-reconfigure --frontend=noninteractive locales
  - update-locale LANG=en_US.UTF-8
  - export LANG=en_US.UTF-8
  - apt-get install -y yes python3 gradle wget tar unzip lib32stdc++6 lib32z1
  - mkdir -p ~/.config/godot/projects
  - mkdir -p ~/.godot
  - mkdir -p ~/.local/share/godot
  - mkdir -p ~/.config/godot
  - mkdir -p ~/.cache
  - cp $DOCKER_HOME/.gitlab/ci_scripts/editor_settings-3.tres ~/.config/godot/editor_settings-3.tres

stages:
  - unit_test
  - integration_test
  - multiplayer_unit_test
  - multiplayer_integration_test
  - build_for_android

unit_tests:
  stage: unit_test
  variables:
    DEBIAN_FRONTEND: noninteractive
  script:
    - wget --quiet --output-document=$GODOT_ZIP $GODOT_DOWNLOAD_URL
    - unzip -q -d godot_editor $GODOT_ZIP
    - chmod +x $GODOT_EXC
    - python3 $DOCKER_HOME/godot/tests/run_unit_tests.py

integration_tests:
  stage: integration_test
  script:
    - wget --quiet --output-document=$GODOT_ZIP $GODOT_DOWNLOAD_URL
    - unzip -q -d godot_editor $GODOT_ZIP
    - chmod +x $GODOT_EXC
    - python3 $DOCKER_HOME/godot/tests/run_integration_tests.py

multiplayer_unit_tests:
  stage: multiplayer_integration_test
  script:
    - wget --quiet --output-document=$GODOT_ZIP $GODOT_DOWNLOAD_URL
    - unzip -q -d godot_editor $GODOT_ZIP
    - chmod +x $GODOT_EXC
    - python3 $DOCKER_HOME/godot/tests/run_multiplayer_unit_tests.py

multiplayer_integration_tests:
  stage: multiplayer_integration_test
  script:
    - wget --quiet --output-document=$GODOT_ZIP $GODOT_DOWNLOAD_URL
    - unzip -q -d godot_editor $GODOT_ZIP
    - chmod +x $GODOT_EXC
    - python3 $DOCKER_HOME/godot/tests/run_multiplayer_integration_tests.py

build_apk:
  stage: build_for_android
  script:
    - wget --quiet --output-document=$GODOT_ZIP $GODOT_DOWNLOAD_URL
    - wget --quiet --output-document=GodotExportTemplates.tpz $GODOT_EXPORT_TEMPLATES
    - unzip -q -d godot_editor $GODOT_ZIP
    - unzip -q -d ~/.local/share/godot GodotExportTemplates.tpz
    - ls -a ~/.local/share/godot
    - chmod +x $GODOT_EXC
    # Start trying to download Android SDK and tools for compiliation. 
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
    - mkdir -p android-sdk-linux/cmdline-tools
    - unzip -d android-sdk-linux/cmdline-tools android-sdk.zip
    - echo y | android-sdk-linux/cmdline-tools/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/cmdline-tools/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/cmdline-tools/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$ANDROID_HOME/cmdline-tools/tools/bin
    #- chmod +x ./gradlew
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/cmdline-tools/tools/bin/sdkmanager --licenses
    - set -o pipefail
    - $GODOT_EXC --path godot --export-debug Android FreecoiL.apk
  artifacts:
    paths:
    - Freecoil.apk
    expire_in: 1 week
