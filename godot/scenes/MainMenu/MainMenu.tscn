[gd_scene load_steps=74 format=2]

[ext_resource path="res://assets/themes/default/default.theme" type="Theme" id=1]
[ext_resource path="res://assets/fonts/BlackOpsOne-Regular.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://assets/themes/default/default_LineEdit.theme" type="Theme" id=3]
[ext_resource path="res://scenes/Widgets/PlusMinusWidget.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/ConnectWeapon/1,-1-ConnectGun.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/MainMenu/Tests.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/MainMenu/Header2.tscn" type="PackedScene" id=7]
[ext_resource path="res://assets/images/pistol.png" type="Texture" id=8]
[ext_resource path="res://assets/sounds/empty_gun_shot.wav" type="AudioStream" id=9]

[sub_resource type="GDScript" id=1]
script/source = "extends Control


onready var EmptyGunShotSound = get_node(\"EmptyGunShotSound\")


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_trigger_btn_pressed\"), self, \"update_trigger_pressed\")


func update_trigger_pressed(new_val):
    if new_val != 0:
        if not EmptyGunShotSound.playing:
            EmptyGunShotSound.play()
            Input.vibrate_handheld(200)
"

[sub_resource type="GDScript" id=2]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_power_btn_counter\"), self, \"update_count_value\")
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_power_btn_pressed\"), self, \"update_pressed\")


func update_count_value(new_val):
    text = str(new_val)

func update_pressed(pressed):
    if pressed == 0:
        self_modulate = Color(\"ffffff\")
    else:
        self_modulate = Color(\"db0101\")
"

[sub_resource type="GDScript" id=3]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_reload_btn_counter\"), self, \"update_count_value\")
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_reload_btn_pressed\"), self, \"update_pressed\")


func update_count_value(new_val):
    text = str(new_val)

func update_pressed(pressed):
    if pressed == 0:
        self_modulate = Color(\"ffffff\")
    else:
        self_modulate = Color(\"db0101\")
"

[sub_resource type="GDScript" id=4]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_thumb_btn_counter\"), self, \"update_count_value\")
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_thumb_btn_pressed\"), self, \"update_pressed\")


func update_count_value(new_val):
    text = str(new_val)

func update_pressed(pressed):
    if pressed == 0:
        self_modulate = Color(\"ffffff\")
    else:
        self_modulate = Color(\"db0101\")
    
"

[sub_resource type="GDScript" id=5]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_trigger_btn_counter\"), self, \"update_count_value\")
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_trigger_btn_pressed\"), self, \"update_pressed\")


func update_count_value(new_val):
    text = str(new_val)

func update_pressed(pressed):
    if pressed == 0:
        self_modulate = Color(\"ffffff\")
    else:
        self_modulate = Color(\"db0101\")
"

[sub_resource type="GDScript" id=6]
script/source = "extends RichTextLabel


var tracked_power_btn = 0
var tracked_trigger_btn = 0
var tracked_thumb_btn = 0
var tracked_reload_btn = 0


# Called when the node enters the scene tree for the first time.
func _ready():
    add_to_group(\"FreecoiL\")
    Settings.Session.connect(Settings.Session.monitor_data(\"game_weapon_magazine_ammo\"), self, \"weapon_ammo_changed\")


func fi_command_accepted():
    text += \"Command Accepted.\\n\"

func fi_player_id_changed():
    text += \"Player Laser ID Changed to \" + str(FreecoiLInterface.laser_gun_id) + \".\\n\"

func weapon_ammo_changed(new_val):
    text += \"Weapon Ammo is now \" + str(new_val) + \".\\n\"

func fi_buttons_pressed(powerBtnPressed, triggerBtnPressed, thumbBtnPressed, reloadBtnPressed):
    if tracked_power_btn != powerBtnPressed:
        tracked_power_btn = powerBtnPressed
        text += \"Power button state = \" + str(tracked_power_btn) + \".\\n\"
    if tracked_trigger_btn != triggerBtnPressed:
        tracked_trigger_btn = triggerBtnPressed
        text += \"Trigger button state = \" + str(tracked_trigger_btn) + \".\\n\"
    if tracked_thumb_btn != thumbBtnPressed:
        tracked_thumb_btn = thumbBtnPressed
        text += \"Thumb button state = \" + str(tracked_thumb_btn) + \".\\n\"
    if tracked_reload_btn != reloadBtnPressed:
        tracked_reload_btn = reloadBtnPressed
        text += \"Reload button state = \" + str(tracked_reload_btn) + \".\\n\"
"

[sub_resource type="GDScript" id=7]
script/source = "extends Button

var count = 0
onready var LaserId = get_parent().get_node(\"PlusMinusWidget\")
onready var WpnPrfl = get_parent().get_node(\"PlusMinusWidget2\")
onready var RichText = get_parent().get_node(\"RichTextLabel\")
onready var NarrowPwr = get_parent().get_node(\"PlusMinusWidget3\")
onready var WidePwr = get_parent().get_node(\"PlusMinusWidget4\")
onready var RateOfFire = get_parent().get_node(\"PlusMinusWidget5\")


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button5_pressed():
    if count == 0:
        FreecoiLInterface.enable_recoil(false)
        Settings.Session.set_data(\"game_player_alive\", true)
    count += 1
    if Settings.Session.get_data(\"fi_laser_status\") == 3:
        FreecoiLInterface.reload_start()
        yield(get_tree().create_timer(0.1), \"timeout\")
        FreecoiLInterface.set_laser_id(LaserId.current_val)
        yield(get_tree().create_timer(0.1), \"timeout\")
        if RateOfFire.current_val == 0:
            FreecoiLInterface.new_set_shot_mode(\"single\", NarrowPwr.current_val, WidePwr.current_val)
        elif RateOfFire.current_val == 3:
            FreecoiLInterface.new_set_shot_mode(\"burst\", NarrowPwr.current_val, WidePwr.current_val)
        elif RateOfFire.current_val == 1:
            FreecoiLInterface.new_set_shot_mode(\"auto\", NarrowPwr.current_val, WidePwr.current_val)
        else:
            FreecoiLInterface.new_set_shot_mode(\"custom\", NarrowPwr.current_val, WidePwr.current_val, RateOfFire.current_val)
        yield(get_tree().create_timer(0.2), \"timeout\") 
        FreecoiLInterface.reload_finish(20, LaserId.current_val, WpnPrfl.current_val)
        RichText.text += \"Updated Laser ID via set_laser_id. \" + str(Settings.Session.get_data(\"fi_laser_status\")) + \"\\n\"
    else:
        FreecoiLInterface.reload_start()
        while Settings.Session.get_data(\"fi_laser_status\") == 2:
            yield(get_tree().create_timer(0.1), \"timeout\")
        if RateOfFire.current_val == 0:
            FreecoiLInterface.new_set_shot_mode(\"single\", NarrowPwr.current_val, WidePwr.current_val)
        elif RateOfFire.current_val == 3:
            FreecoiLInterface.new_set_shot_mode(\"burst\", NarrowPwr.current_val, WidePwr.current_val)
        elif RateOfFire.current_val == 1:
            FreecoiLInterface.new_set_shot_mode(\"auto\", NarrowPwr.current_val, WidePwr.current_val)
        else:
            FreecoiLInterface.new_set_shot_mode(\"custom\", NarrowPwr.current_val, WidePwr.current_val, RateOfFire.current_val)
        yield(get_tree().create_timer(0.1), \"timeout\")
        FreecoiLInterface.reload_finish(20, LaserId.current_val, WpnPrfl.current_val)
        RichText.text += \"Updated Laser ID via Reload Finish.\\n\"

func _on_PlusMinusWidget_PMWidChanged(__):
    pass
"

[sub_resource type="GDScript" id=8]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_laser_id\"), self, \"update_val\")


func update_val(new_val):
    text = \"Laser ID=\" + str(new_val)
"

[sub_resource type="GDScript" id=9]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_laser_status\"), self, \"update_val\")


func update_val(new_val):
    text = \"Status=\" + str(new_val)
"

[sub_resource type="GDScript" id=10]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_command_id\"), self, \"update_command_id\")


func update_command_id(new_val):
    text = \"Command ID=\" + str(new_val)
"

[sub_resource type="GDScript" id=11]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"game_weapon_magazine_ammo\"), self, \"weapon_ammo_changed\")


func weapon_ammo_changed(new_val):
    text = \"AmmoRemaining=\" + str(new_val)
"

[sub_resource type="GDScript" id=12]
script/source = "extends Label



# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_wpn_prfl\"), self, \"update_val\")


func update_val(new_val):
    text = \"WeaponProfile=\" + str(new_val)



"

[sub_resource type="GDScript" id=13]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shooter1_laser_id\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        text = \"Shooter1ID=\" + str(new_val)
"

[sub_resource type="GDScript" id=14]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shot_counter_1\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        text = \"ShotCounter1=\" + str(new_val)
"

[sub_resource type="GDScript" id=15]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shooter1_wpn_prfl\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        text = \"Shooter1WpnProfile=\" + str(new_val)
"

[sub_resource type="GDScript" id=16]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shooter1_charge\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        text = \"Shooter1Charge=\" + str(new_val)
"

[sub_resource type="GDScript" id=17]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shooter1_sensor_clip\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
"

[sub_resource type="GDScript" id=18]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shooter1_sensor_front\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
"

[sub_resource type="GDScript" id=19]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shooter1_sensor_left\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
"

[sub_resource type="GDScript" id=20]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"fi_shooter1_sensor_right\"), self, \"update_val\")


func update_val(new_val):
    if new_val != 0:
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"db0101\")
        yield(get_tree().create_timer(0.2), \"timeout\") 
        self_modulate = Color(\"ffffff\")
"

[sub_resource type="GDScript" id=21]
script/source = "extends Button

onready var RateOfFire = get_parent().get_node(\"PlusMinusWidget5\")


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button6_pressed():
    RateOfFire.current_val = 0
"

[sub_resource type="GDScript" id=22]
script/source = "extends Button


onready var RateOfFire = get_parent().get_node(\"PlusMinusWidget5\")


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button7_pressed():
    RateOfFire.current_val = 3
"

[sub_resource type="GDScript" id=23]
script/source = "extends Button


onready var RateOfFire = get_parent().get_node(\"PlusMinusWidget5\")


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button8_pressed():
    RateOfFire.current_val = 1
"

[sub_resource type="GDScript" id=24]
script/source = "extends ReferenceRect


onready var PlayerName = get_node(\"CenterContainer/VBoxContainer/HBoxContainer/PlayerName\")


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Preferences.connect(Settings.Preferences.monitor_data(\"player_name\"), self, \"update_player_name\")
    Settings.Preferences.set_data(\"player_hit_indicator_duration\", 3)
    update_player_name(Settings.Preferences.get_data(\"player_name\"))


func update_player_name(new_name):
    if new_name == null:
        pass
    else:
        PlayerName.text = new_name
"

[sub_resource type="DynamicFont" id=25]
size = 48
font_data = ExtResource( 2 )

[sub_resource type="GDScript" id=26]
script/source = "extends LineEdit


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Preferences.connect(Settings.Preferences.monitor_data(\"player_name\"), self, \"update_val\")


func update_val(val):
    if val == null:
        text = \"\"
    else:
        text = str(val)


func _on_PlayerName_text_entered(new_text):
    new_text = new_text.strip_edges()
    if new_text == \"\":
        text = Settings.Preferences.get_data(\"player_name\")
    else:
        Settings.Preferences.set_data(\"player_name\", new_text)
        get_tree().call_group(\"Network\", \"set_player_name\")
"

[sub_resource type="GDScript" id=27]
script/source = "extends Button


onready var PlayerName =  get_parent().get_node(\"HBoxContainer/PlayerName\")


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    PlayerName._on_PlayerName_text_entered(PlayerName.text)
    get_tree().call_group(\"Container\", \"next_menu\", Settings.Session.get_data(\"previous_menu\"))
"

[sub_resource type="GDScript" id=28]
script/source = "extends ReferenceRect

var background_loading = false
var thread_num = null

onready var LoginPlayerAudio = get_node(\"LoginPlayerAudio\")
onready var CallSignLineEdit = get_node(\"CenterContainer/VBoxContainer/VBoxContainer/LineEdit\")


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"current_menu\"), self, \"force_player_name\")
    if Settings.Preferences.get_data(\"player_name\") == null:
        force_player_name(null)
    else: 
        get_tree().call_group(\"Container\", \"next_menu\", \"0,0\")

func force_player_name(__):
    if Settings.Preferences.get_data(\"player_name\") == null:
        Settings.Preferences.set_data(\"player_name\", \"No Name\")
        if Settings.Session.get_data(\"current_menu\") != \"0,-1\":
            get_tree().call_group(\"Container\", \"next_menu\", \"0,-1\")
            yield(get_tree(), 'idle_frame')
            CallSignLineEdit.grab_focus()
            yield(get_tree(), 'idle_frame')
            if LoginPlayerAudio.playing == false:
                if Settings.Session.get_data(\"experimental_toggles\")[\"background_resource_loader\"]:
                    if not background_loading:
                        background_loading = true
                        thread_num = Helpers.threaded_background_loader(\"res://assets/voices/EN_MV_login2.wav\")
                        Settings.Session.connect(Settings.Session.monitor_data(\"Helpers_background_load_result\"), self,
                            \"play_audio_from_background\")
                else:
                    LoginPlayerAudio.stream = load(\"res://assets/voices/EN_MV_login2.wav\")
                    LoginPlayerAudio.play()
#    if FreecoiLInterface.laser_is_connected != true:
#        force_gun_connection(null)
        

func force_gun_connection(__):
    if FreecoiLInterface.laser_is_connected != true:
        if Settings.Session.get_data(\"current_menu\") != \"1,-1\":
            get_tree().call_group(\"Container\", \"next_menu\", \"1,-1\")
            
func play_audio_from_background(background_results):
    var results = background_results[thread_num]
    if results == \"finished\":
        LoginPlayerAudio.stream = Helpers.get_loaded_resource_from_background(thread_num)
        LoginPlayerAudio.play()
"

[sub_resource type="GDScript" id=29]
script/source = "extends LineEdit


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass


func _on_LineEdit_text_entered(new_text):
    new_text = new_text.strip_edges()
    if new_text == \"\":
        pass
    else:
        Settings.Preferences.set_data(\"player_name\", new_text)
        get_tree().call_group(\"Container\", \"next_menu\", \"0,0\")


func _on_Button_pressed():
    text = text.strip_edges()
    if text == \"\":
        placeholder_text = \"Please Enter A Callsign!\"
        grab_focus()
    else:
        var new_text = text
        Settings.Preferences.set_data(\"player_name\", new_text)
        get_tree().call_group(\"Container\", \"next_menu\", \"0,0\")
"

[sub_resource type="DynamicFont" id=30]
size = 60
font_data = ExtResource( 2 )

[sub_resource type="GDScript" id=31]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button2_pressed():
    Settings.InGame.set_data(\"game_networked\", true)
    get_tree().call_group(\"Container\", \"next_menu\", \"0,1\")
"

[sub_resource type="GDScript" id=32]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button4_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"-1,0\")
"

[sub_resource type="GDScript" id=33]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"4,1\")
    get_tree().call_group(\"Network\", \"search_for_peers\")
"

[sub_resource type="GDScript" id=34]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button2_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"1,1\")
    get_tree().call_group(\"Network\", \"setup_server_part1\")
"

[sub_resource type="GDScript" id=35]
script/source = "extends Button


func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"2,1\")
    Settings.InGame.set_data(\"new_user_mode\", true)
"

[sub_resource type="GDScript" id=36]
script/source = "extends Button





func _on_Button2_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"3,1\")
    Settings.InGame.set_data(\"new_user_mode\", false)
"

[sub_resource type="GDScript" id=37]
script/source = "extends Button



func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"3,1\")
    Settings.InGame.set_data(\"force_recoil\", \"on\")
    
"

[sub_resource type="GDScript" id=38]
script/source = "extends Button




func _on_Button2_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"3,1\")
    Settings.InGame.set_data(\"force_recoil\", \"off\")
"

[sub_resource type="GDScript" id=39]
script/source = "extends Button




func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"3,1\")
    Settings.InGame.set_data(\"force_recoil\", \"dont\")
"

[sub_resource type="GDScript" id=40]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    Settings.InGame.set_data(\"game_scenario\", \"custom\")
    get_tree().call_group(\"Container\", \"next_menu\", \"0,3\")
"

[sub_resource type="GDScript" id=41]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    Settings.InGame.set_data(\"game_teams\", true)
    Settings.InGame.set_data(\"game_number_of_teams\", 2)
    get_tree().call_group(\"Container\", \"next_menu\", \"0,4\")
"

[sub_resource type="GDScript" id=42]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button2_pressed():
    Settings.InGame.set_data(\"game_teams\", false)
    get_tree().call_group(\"Container\", \"next_menu\", \"1,3\")
"

[sub_resource type="GDScript" id=43]
script/source = "extends Button

func _on_Button_pressed():
    var num_of_teams = get_parent().get_node(\"PlusMinusWidget\").current_val
    Settings.InGame.set_data(\"game_start_health\", num_of_teams)
    get_tree().call_group(\"Container\", \"next_menu\", \"2,3\")

func _on_HSlider_value_changed(value):
    get_parent().get_node(\"PlusMinusWidget\").set_current_val(value, false)

func _on_PlusMinusWidget_PMWidChanged(new_value):
    get_parent().get_node(\"HSlider\").value = new_value
"

[sub_resource type="GDScript" id=44]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    var num_of_teams = get_parent().get_node(\"PlusMinusWidget\").current_val
    Settings.InGame.set_data(\"game_number_of_teams\", num_of_teams)
    get_tree().call_group(\"Container\", \"next_menu\", \"0,5\")


func _on_HSlider_value_changed(value):
    get_parent().get_node(\"PlusMinusWidget\").set_current_val(value, false)


func _on_PlusMinusWidget_PMWidChanged(new_value):
    get_parent().get_node(\"HSlider\").value = new_value
"

[sub_resource type="GDScript" id=45]
script/source = "extends Button





func _on_Button_pressed():
    Settings.InGame.set_data(\"game_friendly_fire\", true)
    get_tree().call_group(\"Container\", \"next_menu\", \"1,3\")
"

[sub_resource type="GDScript" id=46]
script/source = "extends Button

func _on_Button2_pressed():
    Settings.InGame.set_data(\"game_friendly_fire\", false)
    get_tree().call_group(\"Container\", \"next_menu\", \"1,3\")
"

[sub_resource type="GDScript" id=47]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    var num_of_deaths = get_parent().get_node(\"PlusMinusWidget\").current_val
    Settings.InGame.set_data(\"game_death_limit\", num_of_deaths)
    get_tree().call_group(\"Container\", \"next_menu\", \"4,3\")


func _on_PlusMinusWidget_PMWidChanged(new_value):
    get_parent().get_node(\"HSlider\").value = new_value


func _on_HSlider_value_changed(value):
    get_parent().get_node(\"PlusMinusWidget\").set_current_val(value, false)
"

[sub_resource type="GDScript" id=48]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    var amount_of_time = get_parent().get_node(\"PlusMinusWidget\").current_val * 60
    Settings.InGame.set_data(\"game_time_limit\", amount_of_time)
    get_tree().call_group(\"Container\", \"next_menu\", \"4,3\")


func _on_PlusMinusWidget_PMWidChanged(new_value):
    get_parent().get_node(\"HSlider\").value = new_value


func _on_HSlider_value_changed(value):
    get_parent().get_node(\"PlusMinusWidget\").set_current_val(value, false)
"

[sub_resource type="GDScript" id=49]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    Settings.InGame.set_data(\"game_indoor_mode\", \"indoor_no_cone\")
    get_tree().call_group(\"Container\", \"next_menu\", \"3,3\")
"

[sub_resource type="GDScript" id=50]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button2_pressed():
    Settings.InGame.set_data(\"game_indoor_mode\", \"outdoor_with_cone\")
    get_tree().call_group(\"Container\", \"next_menu\", \"3,3\")
"

[sub_resource type="GDScript" id=51]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    Settings.InGame.set_data(\"game_limit_mode\", \"deaths\")
    get_tree().call_group(\"Container\", \"next_menu\", \"3,4\")
"

[sub_resource type="GDScript" id=52]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button2_pressed():
    Settings.InGame.set_data(\"game_limit_mode\", \"time\")
    get_tree().call_group(\"Container\", \"next_menu\", \"3,5\")
"

[sub_resource type="GDScript" id=53]
script/source = "extends Button


func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"0,6\")
    Settings.InGame.set_data(\"game_respawn_delay\", -1)
"

[sub_resource type="GDScript" id=54]
script/source = "extends Button


func _on_Button2_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"4,4\")
"

[sub_resource type="GDScript" id=55]
script/source = "extends Button


func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"0,6\")
    var respawn_delay = get_parent().get_node(\"PlusMinusWidget\").current_val
    Settings.InGame.set_data(\"game_respawn_delay\", respawn_delay)
    


func _on_PlusMinusWidget_PMWidChanged(new_value):
    get_parent().get_node(\"HSlider\").value = new_value


func _on_HSlider_value_changed(value):
    get_parent().get_node(\"PlusMinusWidget\").set_current_val(value, false)
"

[sub_resource type="GDScript" id=56]
script/source = "extends ReferenceRect

const my_menu = \"0,6\"
const default_wpns = {\"P1S\": {\"magazine_size\": 10, \"damage\": 1, \"shot_modes\": [\"single\"], \"reload_speed\": 3, 
            \"rate_of_fire\": 0.3}, 
        \"P1B\": {\"magazine_size\": 10, \"damage\": 1, \"shot_modes\": [\"burst\"], \"reload_speed\": 3, \"rate_of_fire\": 0.3}, 
        \"P1A\": {\"magazine_size\": 10, \"damage\": 1, \"shot_modes\": [\"auto\"], \"reload_speed\": 3, \"rate_of_fire\": 0.3},
        \"P2S\": {\"magazine_size\": 17, \"damage\": 1, \"shot_modes\": [\"single\"], \"reload_speed\": 3, \"rate_of_fire\": 0.3},
        \"P2B\": {\"magazine_size\": 17, \"damage\": 1, \"shot_modes\": [\"burst\"], \"reload_speed\": 3, \"rate_of_fire\": 0.3},
        \"P2A\": {\"magazine_size\": 17, \"damage\": 1, \"shot_modes\": [\"auto\"], \"reload_speed\": 3, \"rate_of_fire\": 0.3},
        \"A1SBA\": {\"magazine_size\": 30, \"damage\": 1, \"shot_modes\": [\"single\", \"burst\", \"auto\"], \"reload_speed\": 3, 
            \"rate_of_fire\": 0.3},
        \"M1A\": {\"magazine_size\": 100, \"damage\": 1, \"shot_modes\": [\"auto\"], \"reload_speed\": 3, 
            \"rate_of_fire\": 0.3},
        \"A2SBA\": {\"magazine_size\": 30, \"damage\": 2, \"shot_modes\": [\"single\", \"burst\", \"auto\"], \"reload_speed\": 3, 
            \"rate_of_fire\": 0.3}}
const default_start_wpns = [\"P1S\"]
const default_start_ammo = {\"P1S\": 300}
const default_wpn_for_prob = \"P1S\"
const default_wpn_probabilities = {\"P1S\":0.32, \"P1B\":0.1, \"P1A\":0.1, \"P2S\":0.1, \"P2B\":0.1, \"P2A\":0.1, 
        \"A1SBA\":0.1, \"M1A\":0.05, \"A2SBA\": 0.03} 
const default_wpns_ammo_drop = {\"P1S\":20, \"P1B\":20, \"P1A\":20, \"P2S\":34, \"P2B\":34, \"P2A\":34, 
        \"A1SBA\":60, \"M1A\":200, \"A2SBA\": 60}
var wpns_available = default_wpns.duplicate(true)
var start_wpns = default_start_wpns.duplicate()
        
onready var Grid = get_node(\"CenterContainer/VBoxContainer/ScrollContainer/GridContainer\")

# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"current_menu\"), self, \"check_if_visible\")


func check_if_visible(current_menu):
    if current_menu == my_menu:
        Settings.InGame.set_data(\"game_weapon_types\", default_wpns)
        Settings.InGame.set_data(\"game_start_weapon_types\", default_start_wpns)
        Settings.InGame.set_data(\"game_start_ammo\", default_start_ammo)
        Settings.InGame.set_data(\"game_weapon_prob_default\", default_wpn_for_prob)
        Settings.InGame.set_data(\"game_weapon_probabilities\", default_wpn_probabilities)
        Settings.InGame.set_data(\"game_weapons_ammo_drop\", default_wpns_ammo_drop)
        clear_grid()
        build_grid()


func clear_grid():
    for child in Grid.get_children():
        child.queue_free()
        
func build_grid():
    for weapon in default_wpns:
        var wpn_lbl = Label.new()
        var wpn_start_with = CheckButton.new()
        var wpn_available = CheckButton.new()
        wpn_lbl.text = weapon
        wpn_lbl.rect_min_size.x = 192
        if default_start_wpns.has(weapon):
            wpn_start_with.pressed = true
            wpn_start_with.self_modulate = Color(Settings.Session.get_data(\"ThemeGoodState\"))
        if default_wpns.keys().has(weapon):
            wpn_available.pressed = true
            wpn_available.self_modulate = Color(Settings.Session.get_data(\"ThemeGoodState\"))
        wpn_available.size_flags_horizontal = SIZE_SHRINK_END + SIZE_EXPAND
        wpn_start_with.connect(\"toggled\", self, \"on_start_with_toggled\", [weapon, wpn_start_with])
        wpn_available.connect(\"toggled\", self, \"on_wpn_available_toggled\", [weapon, wpn_available])
        Grid.add_child(wpn_lbl)
        Grid.add_child(wpn_start_with)
        Grid.add_child(wpn_available)
        
func on_start_with_toggled(on, weapon, btn_ref):
    if on == false:
        if start_wpns.has(weapon):
            if start_wpns.size() == 1:  # Don't erase if only 1 start weapon must have 1.
                btn_ref.pressed = true
                btn_ref.self_modulate = Color(Settings.Session.get_data(\"ThemeGoodState\"))
            else:
                if weapon == \"P1S\":
                    Settings.InGame.set_data(\"game_start_ammo\", {})
                start_wpns.erase(weapon)
                btn_ref.self_modulate = Color(\"ffffff\")
    if on == true:
        if start_wpns.has(weapon):
            pass
        else:
            start_wpns.append(weapon)
        btn_ref.self_modulate = Color(Settings.Session.get_data(\"ThemeGoodState\"))
    Settings.InGame.set_data(\"game_start_weapon_types\", start_wpns)

func on_wpn_available_toggled(on, weapon, btn_ref):
    if on == false:
        if wpns_available.keys().has(weapon):
            if wpns_available.keys().size() == 1:
                btn_ref.pressed = true
                btn_ref.self_modulate = Color(Settings.Session.get_data(\"ThemeGoodState\"))
            else:
                wpns_available.erase(weapon)
                btn_ref.self_modulate = Color(\"ffffff\")
    if on == true:
        if wpns_available.keys().has(weapon):
            pass
        else:
            wpns_available[weapon] = default_wpns[weapon]
        btn_ref.self_modulate = Color(Settings.Session.get_data(\"ThemeGoodState\"))
    Settings.InGame.set_data(\"game_weapon_types\", wpns_available) 
"

[sub_resource type="GDScript" id=57]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"1,6\")
"

[sub_resource type="GDScript" id=58]
script/source = "extends ReferenceRect


const my_menu = \"1,6\"

onready var Grid = get_node(\"CenterContainer/VBoxContainer/ScrollContainer/GridContainer\")

# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"current_menu\"), self, \"check_if_visible\")


func check_if_visible(current_menu):
    if current_menu == my_menu:
        clear_grid()
        build_grid()

func clear_grid():
    for child in Grid.get_children():
        child.queue_free()

func build_grid():
    var start_wpns = Settings.InGame.get_data(\"game_start_weapon_types\")
    var game_start_ammo = Settings.InGame.get_data(\"game_start_ammo\")
    for weapon in start_wpns:
        var wpn_lbl = Label.new()
        var ammo_slider = HSlider.new()
        var ammo_lineedit = LineEdit.new()
        wpn_lbl.text = weapon
        wpn_lbl.rect_min_size.x = 192
        ammo_slider.rect_min_size.x = 180
        ammo_slider.min_value = 0
        ammo_slider.max_value = 999
        ammo_lineedit.size_flags_horizontal = SIZE_SHRINK_END + SIZE_EXPAND
        ammo_lineedit.rect_min_size.x = 130
        ammo_slider.connect(\"value_changed\", self, \"on_ammo_slider_changed\", [weapon, ammo_slider, ammo_lineedit])
        ammo_lineedit.connect(\"text_entered\", self, \"on_ammo_lineedit_entered\", [weapon, ammo_lineedit, ammo_slider])
        if game_start_ammo.keys().has(weapon):
            ammo_slider.value = game_start_ammo[weapon]
            ammo_lineedit.text = str(game_start_ammo[weapon])
        else:
            ammo_slider.value = 0
            ammo_lineedit.text = str(0)
        Grid.add_child(wpn_lbl)
        Grid.add_child(ammo_slider)
        Grid.add_child(ammo_lineedit)

func on_ammo_slider_changed(new_val, weapon, slider_ref, lineedit_ref):
    var game_start_ammo = Settings.InGame.get_data(\"game_start_ammo\")
    game_start_ammo[weapon] = new_val
    Settings.InGame.set_data(\"game_start_ammo\", game_start_ammo)
    lineedit_ref.text = str(new_val)

func on_ammo_lineedit_entered(new_val, weapon, lineedit_ref, slider_ref):
    if slider_ref.value == int(new_val):
        lineedit_ref.text = str(int(new_val))
    slider_ref.value = int(new_val)
"

[sub_resource type="GDScript" id=59]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"2,6\")
"

[sub_resource type="GDScript" id=60]
script/source = "extends ReferenceRect


const my_menu = \"2,6\"

onready var Grid = get_node(\"CenterContainer/VBoxContainer/ScrollContainer/GridContainer\")

# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"current_menu\"), self, \"check_if_visible\")


func check_if_visible(current_menu):
    if current_menu == my_menu:
        clear_grid()
        build_grid()
        get_tree().call_group(\"Container\", \"next_menu\", \"5,1\")
        # TODO: Putting other Game Settings Here for Now until MainMenu is Expanded.
        Settings.InGame.set_data(\"game_start_delay\", 5)
        get_tree().call_group(\"Container\", \"load_lobby\")

func clear_grid():
    for child in Grid.get_children():
        child.queue_free()

func build_grid():
    var start_wpns = Settings.InGame.get_data(\"game_start_weapon_types\")
    var wpns_available = Settings.InGame.get_data(\"game_weapon_types\")
    var game_start_ammo = Settings.InGame.get_data(\"game_start_ammo\")
    for weapon in wpns_available.keys():
        var wpn_lbl = Label.new()
        var ammo_slider = HSlider.new()
        var ammo_lineedit = LineEdit.new()
        wpn_lbl.text = weapon
        wpn_lbl.rect_min_size.x = 192
        ammo_slider.rect_min_size.x = 180
        ammo_slider.min_value = 0
        ammo_slider.max_value = 999
        ammo_lineedit.size_flags_horizontal = SIZE_SHRINK_END + SIZE_EXPAND
        ammo_lineedit.rect_min_size.x = 130
        ammo_slider.connect(\"value_changed\", self, \"on_ammo_slider_changed\", [weapon, ammo_slider, ammo_lineedit])
        ammo_lineedit.connect(\"text_entered\", self, \"on_ammo_lineedit_entered\", [weapon, ammo_lineedit, ammo_slider])
        ammo_slider.value = wpns_available[weapon][\"magazine_size\"] * 2
        ammo_lineedit.text = str(wpns_available[weapon][\"magazine_size\"] * 2)
        Grid.add_child(wpn_lbl)
        Grid.add_child(ammo_slider)
        Grid.add_child(ammo_lineedit)

func on_ammo_slider_changed(new_val, weapon, slider_ref, lineedit_ref):
    var wpns_ammo_drop = Settings.InGame.get_data(\"game_weapons_ammo_drop\")
    wpns_ammo_drop[weapon] = new_val
    Settings.InGame.set_data(\"game_weapons_ammo_drop\", wpns_ammo_drop)
    lineedit_ref.text = str(new_val)

func on_ammo_lineedit_entered(new_val, weapon, lineedit_ref, slider_ref):
    if slider_ref.value == int(new_val):
        lineedit_ref.text = str(int(new_val))
    slider_ref.value = int(new_val)
"

[sub_resource type="GDScript" id=61]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_Button_pressed():
    get_tree().call_group(\"Container\", \"next_menu\", \"3,6\")
"

[sub_resource type="GDScript" id=62]
script/source = "extends ReferenceRect


const my_menu = \"3,6\"

onready var Grid = get_node(\"CenterContainer/VBoxContainer/ScrollContainer/GridContainer\")

# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"current_menu\"), self, \"check_if_visible\")


func check_if_visible(current_menu):
    if current_menu == my_menu:
        #clear_grid()
        #build_grid()
        get_tree().call_group(\"Container\", \"next_menu\", \"5,1\")
        # TODO: Putting other Game Settings Here for Now until MainMenu is Expanded.
        Settings.InGame.set_data(\"game_start_delay\", 5)
        get_tree().call_group(\"Container\", \"load_lobby\") 

func clear_grid():
    for child in Grid.get_children():
        child.queue_free()
"

[sub_resource type="GDScript" id=63]
script/source = "extends OptionButton


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    Settings.Session.connect(Settings.Session.monitor_data(\"server_possible_ips\"), self, \"set_possible_ip_opts\")


func set_possible_ip_opts(possible_ips):
    add_item(\"\")
    for ip in possible_ips:
        add_item(ip)


func _on_OptionButton_pressed():
    get_child(0).rect_global_position = rect_global_position + Vector2(0, rect_size.y)


func _on_OptionButton_item_selected(index):
    var selected_ip = get_item_text(index)
    Settings.Session.set_data(\"server_ip\", selected_ip)
    get_tree().call_group(\"Network\", \"setup_server_part1\")
    get_tree().call_group(\"Container\", \"next_menu\", \"1,1\")
"

[sub_resource type="GDScript" id=64]
script/source = "extends RichTextLabel


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
    pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#    pass


func _on_RichTextLabel_meta_clicked(meta):
    var __ = OS.shell_open(meta)
"

[node name="MainMenu" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 1 )
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="-1,0-Tests" type="ReferenceRect" parent="."]
margin_left = -540.0
margin_right = -500.0
margin_bottom = 40.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tests" parent="-1,0-Tests" instance=ExtResource( 6 )]

[node name="-1,-1-Tests2" type="ReferenceRect" parent="."]
margin_left = -540.0
margin_top = -960.0
margin_bottom = -6.10352e-05
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GunTester" type="Control" parent="-1,-1-Tests2"]
margin_right = 540.0
margin_bottom = 960.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="-1,-1-Tests2/GunTester"]
position = Vector2( 265, 430 )
rotation = 4.71239
scale = Vector2( 1.3, 1.2 )
texture = ExtResource( 8 )

[node name="Button" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 95.4092
margin_top = 222.247
margin_right = 155.409
margin_bottom = 258.247
text = "00"
align = 1
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button2" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 468.0
margin_top = 117.0
margin_right = 528.0
margin_bottom = 153.0
rect_min_size = Vector2( 60, 0 )
text = "00"
align = 1
script = SubResource( 3 )

[node name="Button3" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 65.0538
margin_top = 50.2836
margin_right = 119.054
margin_bottom = 86.2836
rect_min_size = Vector2( 60, 0 )
text = "00"
align = 1
script = SubResource( 4 )

[node name="Button4" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 252.45
margin_top = 275.133
margin_right = 312.45
margin_bottom = 311.133
rect_min_size = Vector2( 60, 0 )
text = "00"
align = 1
script = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RichTextLabel" type="RichTextLabel" parent="-1,-1-Tests2/GunTester"]
margin_left = 2.0
margin_top = 846.0
margin_right = 538.0
margin_bottom = 958.0
scroll_following = true
script = SubResource( 6 )

[node name="Button5" type="Button" parent="-1,-1-Tests2/GunTester"]
margin_right = 12.0
margin_bottom = 44.0
text = "Start Testing"
script = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PlusMinusWidget" parent="-1,-1-Tests2/GunTester" instance=ExtResource( 4 )]
margin_left = 278.125
margin_top = 125.001
margin_right = 427.125
margin_bottom = 172.001
apply_minimum_value = true
apply_maximum_value = true
maximum_value = 63

[node name="PlusMinusWidget2" parent="-1,-1-Tests2/GunTester" instance=ExtResource( 4 )]
margin_left = 351.081
margin_top = 264.293
margin_right = 500.081
margin_bottom = 311.293
apply_minimum_value = true
apply_maximum_value = true
maximum_value = 15

[node name="Label" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 261.0
margin_top = 87.0
margin_right = 463.0
margin_bottom = 123.0
text = "Laser ID=00"
script = SubResource( 8 )

[node name="Label20" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 381.637
margin_top = 46.021
margin_right = 534.637
margin_bottom = 82.021
text = "Status=0"
script = SubResource( 9 )

[node name="Label10" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 267.146
margin_top = 8.97968
margin_right = 407.146
margin_bottom = 44.9797
rect_min_size = Vector2( 263, 0 )
text = "Command Id=00"
script = SubResource( 10 )

[node name="Label11" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 186.0
margin_top = 179.0
margin_right = 535.0
margin_bottom = 215.0
rect_min_size = Vector2( 349, 0 )
text = "AmmoRemaining=000"
script = SubResource( 11 )

[node name="Label21" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 235.0
margin_top = 223.0
margin_right = 533.0
margin_bottom = 259.0
text = "WeaponProfile=00"
script = SubResource( 12 )

[node name="Label2" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 1.1225
margin_top = 302.105
margin_right = 248.122
margin_bottom = 338.105
text = "Shooter1ID=00"
script = SubResource( 13 )

[node name="Label18" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -2.24487
margin_top = 337.514
margin_right = 282.755
margin_bottom = 373.514
text = "ShotCounter1=00"
script = SubResource( 14 )

[node name="Label4" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -5.61224
margin_top = 374.146
margin_right = 378.388
margin_bottom = 410.146
text = "Shooter1WpnProfile=00"
script = SubResource( 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label12" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -6.12238
margin_top = 644.741
margin_right = 381.878
margin_bottom = 680.741
text = "Shooter2WpnProfile=00"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label5" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -2.24487
margin_top = 406.698
margin_right = 381.755
margin_bottom = 442.698
text = "Shooter1Charge=00"
script = SubResource( 16 )

[node name="Label13" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -2.87744
margin_top = 679.537
margin_right = 369.123
margin_bottom = 715.537
text = "Shooter2ChargeLvl=00"

[node name="Label6" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -2.36743
margin_top = 437.183
margin_right = 319.633
margin_bottom = 473.183
text = "Shooter1SensorClip"
script = SubResource( 17 )

[node name="Label14" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -0.122498
margin_top = 712.268
margin_right = 325.878
margin_bottom = 748.268
text = "Shooter2SensorClip"

[node name="Label7" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -3.48987
margin_top = 470.857
margin_right = 348.51
margin_bottom = 506.857
text = "Shooter1SensorFront"
script = SubResource( 18 )

[node name="Label15" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 1.0
margin_top = 748.187
margin_right = 357.0
margin_bottom = 784.187
text = "Shooter2SensorFront"

[node name="Label8" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -4.0
margin_top = 505.898
margin_right = 321.0
margin_bottom = 541.898
text = "Shooter1SensorLeft"
script = SubResource( 19 )

[node name="Label16" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 1.0
margin_top = 778.493
margin_right = 330.0
margin_bottom = 814.493
text = "Shooter2SensorLeft"

[node name="Label9" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -4.6123
margin_top = 541.94
margin_right = 338.388
margin_bottom = 577.94
text = "Shooter1SensorRight"
script = SubResource( 20 )

[node name="Label17" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -2.36737
margin_top = 809.922
margin_right = 344.633
margin_bottom = 845.922
text = "Shooter2SensorRight"

[node name="Label3" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 1.0
margin_top = 573.0
margin_right = 252.0
margin_bottom = 609.0
text = "Shooter2ID=00"

[node name="Label19" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = -0.122437
margin_top = 609.409
margin_right = 250.878
margin_bottom = 645.409
text = "Shooter2ID=00"

[node name="Label22" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 350.258
margin_top = 335.139
margin_right = 544.258
margin_bottom = 371.139
text = "NarrowPwr"

[node name="PlusMinusWidget3" parent="-1,-1-Tests2/GunTester" instance=ExtResource( 4 )]
margin_left = 381.756
margin_top = 377.976
margin_right = 530.756
margin_bottom = 424.976
current_val = 15
apply_minimum_value = true
apply_maximum_value = true
maximum_value = 255

[node name="Label23" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 385.536
margin_top = 447.272
margin_right = 532.536
margin_bottom = 483.272
text = "WidePwr"

[node name="Label24" type="Label" parent="-1,-1-Tests2/GunTester"]
margin_left = 361.536
margin_top = 555.272
margin_right = 537.536
margin_bottom = 591.272
text = "RateOfFire"

[node name="PlusMinusWidget4" parent="-1,-1-Tests2/GunTester" instance=ExtResource( 4 )]
margin_left = 386.796
margin_top = 493.889
margin_right = 535.796
margin_bottom = 540.889
current_val = 15
apply_minimum_value = true
apply_maximum_value = true
maximum_value = 255

[node name="PlusMinusWidget5" parent="-1,-1-Tests2/GunTester" instance=ExtResource( 4 )]
margin_left = 386.796
margin_top = 593.889
margin_right = 535.796
margin_bottom = 640.889
apply_minimum_value = true
apply_maximum_value = true
maximum_value = 255

[node name="Button6" type="Button" parent="-1,-1-Tests2/GunTester"]
margin_left = 364.337
margin_top = 672.855
margin_right = 540.337
margin_bottom = 716.855
text = "SingleShot"
script = SubResource( 21 )

[node name="Button7" type="Button" parent="-1,-1-Tests2/GunTester"]
margin_left = 366.337
margin_top = 736.855
margin_right = 543.337
margin_bottom = 780.855
text = "3RndBurst"
script = SubResource( 22 )

[node name="Button8" type="Button" parent="-1,-1-Tests2/GunTester"]
margin_left = 365.337
margin_top = 799.855
margin_right = 542.337
margin_bottom = 843.855
text = "Full Auto"
script = SubResource( 23 )

[node name="1,-1-ConnectGun" parent="." instance=ExtResource( 5 )]

[node name="Header2" parent="1,-1-ConnectGun" instance=ExtResource( 7 )]
my_menu = "1,-1"

[node name="2,-1-Preferences" type="ReferenceRect" parent="."]
margin_left = 1080.0
margin_top = -960.0
margin_right = 1620.0
margin_bottom = -920.0
rect_min_size = Vector2( 540, 960 )
script = SubResource( 24 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="2,-1-Preferences"]
margin_top = 100.0
margin_right = 540.0
margin_bottom = 660.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="2,-1-Preferences/CenterContainer"]
margin_top = 177.0
margin_right = 540.0
margin_bottom = 382.0
rect_min_size = Vector2( 540, 0 )
custom_constants/separation = 30

[node name="Label" type="Label" parent="2,-1-Preferences/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 61.0
custom_fonts/font = SubResource( 25 )
text = "Player Preferences"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="2,-1-Preferences/CenterContainer/VBoxContainer"]
margin_top = 91.0
margin_right = 540.0
margin_bottom = 131.0
rect_min_size = Vector2( 540, 0 )
alignment = 1

[node name="Label" type="Label" parent="2,-1-Preferences/CenterContainer/VBoxContainer/HBoxContainer"]
margin_top = 2.0
margin_right = 300.0
margin_bottom = 38.0
rect_min_size = Vector2( 300, 0 )
text = "Callsign:"

[node name="PlayerName" type="LineEdit" parent="2,-1-Preferences/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 304.0
margin_right = 539.0
margin_bottom = 40.0
rect_min_size = Vector2( 235, 0 )
theme = ExtResource( 3 )
max_length = 13
script = SubResource( 26 )

[node name="Button" type="Button" parent="2,-1-Preferences/CenterContainer/VBoxContainer"]
margin_top = 161.0
margin_right = 540.0
margin_bottom = 205.0
text = "Return To Previous Menu"
script = SubResource( 27 )

[node name="Header2" parent="2,-1-Preferences" instance=ExtResource( 7 )]
my_menu = "2,-1"
allow_preferences = false

[node name="0,-1-Get Player Name" type="ReferenceRect" parent="."]
margin_top = -960.0
margin_right = 540.0
rect_min_size = Vector2( 540, 960 )
script = SubResource( 28 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="0,-1-Get Player Name"]
margin_top = 100.0
margin_right = 540.0
margin_bottom = 560.0
rect_min_size = Vector2( 540, 460 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="0,-1-Get Player Name/CenterContainer"]
margin_top = 112.0
margin_right = 540.0
margin_bottom = 348.0

[node name="Label" type="Label" parent="0,-1-Get Player Name/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 114.0
rect_min_size = Vector2( 540, 0 )
text = "Welcome to FreecoiL!

Enter your callsign, soldier!"
align = 1
autowrap = true

[node name="VBoxContainer" type="VBoxContainer" parent="0,-1-Get Player Name/CenterContainer/VBoxContainer"]
margin_top = 122.0
margin_right = 540.0
margin_bottom = 236.0
custom_constants/separation = 30

[node name="LineEdit" type="LineEdit" parent="0,-1-Get Player Name/CenterContainer/VBoxContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 40.0
theme = ExtResource( 3 )
align = 1
max_length = 13
context_menu_enabled = false
placeholder_text = "Callsign?"
placeholder_alpha = 0.15
caret_blink = true
script = SubResource( 29 )

[node name="Button" type="Button" parent="0,-1-Get Player Name/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 70.0
margin_right = 540.0
margin_bottom = 114.0
text = "Login"

[node name="Header2" parent="0,-1-Get Player Name" instance=ExtResource( 7 )]
my_menu = "0,-1"
allow_main_menu = false

[node name="LoginPlayerAudio" type="AudioStreamPlayer" parent="0,-1-Get Player Name"]

[node name="0,0-Game Options" type="ReferenceRect" parent="."]
margin_right = 540.0
margin_bottom = 960.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="0,0-Game Options"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 580.0
rect_min_size = Vector2( 540, 460 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="0,0-Game Options/CenterContainer"]
margin_top = 107.0
margin_right = 540.0
margin_bottom = 353.0
custom_constants/separation = 8

[node name="Label" type="Label" parent="0,0-Game Options/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 76.0
rect_min_size = Vector2( 540, 0 )
custom_fonts/font = SubResource( 30 )
text = "FREECOIL"
align = 1
autowrap = true

[node name="Label2" type="Label" parent="0,0-Game Options/CenterContainer/VBoxContainer"]
margin_top = 84.0
margin_right = 540.0
margin_bottom = 120.0
text = "BRINGING THE GAME TO THE WORLD"
align = 1

[node name="VBoxContainer" type="VBoxContainer" parent="0,0-Game Options/CenterContainer/VBoxContainer"]
margin_top = 128.0
margin_right = 540.0
margin_bottom = 246.0
rect_min_size = Vector2( 540, 0 )
custom_constants/separation = 30

[node name="Button" type="Button" parent="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer"]
visible = false
margin_top = 8.0
margin_right = 540.0
margin_bottom = 47.0
disabled = true
text = "Quick Start Game"

[node name="Button2" type="Button" parent="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 44.0
text = "Start A Networked Game"
script = SubResource( 31 )

[node name="Button3" type="Button" parent="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer"]
visible = false
margin_top = 49.0
margin_right = 540.0
margin_bottom = 88.0
disabled = true
text = "Start A No Network Game"

[node name="Button4" type="Button" parent="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 74.0
margin_right = 540.0
margin_bottom = 118.0
text = "Test Mode"
script = SubResource( 32 )

[node name="Header2" parent="0,0-Game Options" instance=ExtResource( 7 )]
allow_main_menu = false

[node name="0,1-Networked Game 1" type="ReferenceRect" parent="."]
margin_top = 960.0
margin_right = 540.0
margin_bottom = 1920.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="0,1-Networked Game 1"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="0,1-Networked Game 1/CenterContainer"]
margin_top = 155.0
margin_right = 540.0
margin_bottom = 404.0

[node name="Label" type="Label" parent="0,1-Networked Game 1/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
rect_min_size = Vector2( 540, 0 )
text = "Network Game Setup"
align = 1

[node name="Label2" type="Label" parent="0,1-Networked Game 1/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 197.0
text = "Will you be the host or a client?
The host sets up the game and it's rules.
Clients simply join in."
align = 1
autowrap = true

[node name="HBoxContainer" type="HBoxContainer" parent="0,1-Networked Game 1/CenterContainer/VBoxContainer"]
margin_top = 205.0
margin_right = 540.0
margin_bottom = 249.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="0,1-Networked Game 1/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 148.0
margin_right = 249.0
margin_bottom = 44.0
text = "Client"
script = SubResource( 33 )

[node name="Button2" type="Button" parent="0,1-Networked Game 1/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 309.0
margin_right = 392.0
margin_bottom = 44.0
text = "Host"
script = SubResource( 34 )

[node name="Header2" parent="0,1-Networked Game 1" instance=ExtResource( 7 )]
my_menu = "0,1"

[node name="1,1-Networked Game 2" type="ReferenceRect" parent="."]
margin_left = 540.0
margin_top = 960.0
margin_right = 1080.0
margin_bottom = 1920.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="1,1-Networked Game 2"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="1,1-Networked Game 2/CenterContainer"]
margin_top = 155.0
margin_right = 540.0
margin_bottom = 404.0

[node name="Label" type="Label" parent="1,1-Networked Game 2/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
rect_min_size = Vector2( 540, 0 )
text = "Network Game Setup"
align = 1

[node name="Label2" type="Label" parent="1,1-Networked Game 2/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 197.0
text = "Do you want to enable \"New User / Tournament Mode\"? This prevents users from customizing game settings. Even things like recoil."
align = 1
autowrap = true

[node name="HBoxContainer" type="HBoxContainer" parent="1,1-Networked Game 2/CenterContainer/VBoxContainer"]
margin_top = 205.0
margin_right = 540.0
margin_bottom = 249.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="1,1-Networked Game 2/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 121.0
margin_right = 235.0
margin_bottom = 44.0
text = "Enable"
script = SubResource( 35 )

[node name="Button2" type="Button" parent="1,1-Networked Game 2/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 295.0
margin_right = 418.0
margin_bottom = 44.0
text = "Disable"
script = SubResource( 36 )

[node name="Header2" parent="1,1-Networked Game 2" instance=ExtResource( 7 )]
my_menu = "1,1"

[node name="2,1-Networked Game 3" type="ReferenceRect" parent="."]
margin_left = 1080.0
margin_top = 960.0
margin_right = 1620.0
margin_bottom = 1920.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="2,1-Networked Game 3"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="2,1-Networked Game 3/CenterContainer"]
margin_top = 130.0
margin_right = 540.0
margin_bottom = 430.0

[node name="Label" type="Label" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
rect_min_size = Vector2( 540, 0 )
text = "Network Game Setup"
align = 1

[node name="Label2" type="Label" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 158.0
text = "Force enable or disable recoil? 
Note: Low Gun Batteries Overrides \"Force Enable\"."
align = 1
autowrap = true

[node name="HBoxContainer" type="HBoxContainer" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer"]
margin_top = 166.0
margin_right = 540.0
margin_bottom = 210.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 23.0
margin_right = 235.0
margin_bottom = 44.0
text = "Force Enable"
script = SubResource( 37 )

[node name="Button2" type="Button" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 295.0
margin_right = 516.0
margin_bottom = 44.0
text = "Force Disable"
script = SubResource( 38 )

[node name="HSeparator" type="HSeparator" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer"]
margin_top = 218.0
margin_right = 540.0
margin_bottom = 248.0
custom_constants/separation = 30

[node name="HBoxContainer2" type="HBoxContainer" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer"]
margin_top = 256.0
margin_right = 540.0
margin_bottom = 300.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer2"]
margin_left = 165.0
margin_right = 374.0
margin_bottom = 44.0
text = "Do Not Force"
script = SubResource( 39 )

[node name="Header2" parent="2,1-Networked Game 3" instance=ExtResource( 7 )]
my_menu = "2,1"

[node name="3,1-Networked Game 4" type="ReferenceRect" parent="."]
margin_left = 1620.0
margin_top = 960.0
margin_right = 2160.0
margin_bottom = 1920.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="3,1-Networked Game 4"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="3,1-Networked Game 4/CenterContainer"]
margin_top = 214.0
margin_right = 540.0
margin_bottom = 346.0

[node name="Label2" type="Label" parent="3,1-Networked Game 4/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Network Game Setup"
align = 1

[node name="Label" type="Label" parent="3,1-Networked Game 4/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
rect_min_size = Vector2( 540, 0 )
text = "What type of match?"
align = 1

[node name="Button" type="Button" parent="3,1-Networked Game 4/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 132.0
text = "Custom Match Setup"
script = SubResource( 40 )

[node name="Button2" type="Button" parent="3,1-Networked Game 4/CenterContainer/VBoxContainer"]
visible = false
margin_top = 139.0
margin_right = 540.0
margin_bottom = 178.0
disabled = true
text = "Scenario Match Selection"

[node name="Header2" parent="3,1-Networked Game 4" instance=ExtResource( 7 )]
my_menu = "3,1"

[node name="4,1-Networked Game 5" type="ReferenceRect" parent="."]
margin_left = 2160.0
margin_top = 960.0
margin_right = 2700.0
margin_bottom = 1920.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="4,1-Networked Game 5"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="4,1-Networked Game 5/CenterContainer"]
margin_top = 240.0
margin_right = 540.0
margin_bottom = 320.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="4,1-Networked Game 5/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Network Game Setup"
align = 1

[node name="Label2" type="Label" parent="4,1-Networked Game 5/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Searching for a Server..."
align = 1

[node name="Header2" parent="4,1-Networked Game 5" instance=ExtResource( 7 )]
my_menu = "4,1"

[node name="5,1-Networked Game 6" type="ReferenceRect" parent="."]
margin_left = 2700.0
margin_top = 960.0
margin_right = 3240.0
margin_bottom = 1920.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="5,1-Networked Game 6"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="5,1-Networked Game 6/CenterContainer"]
margin_top = 262.0
margin_right = 540.0
margin_bottom = 298.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="5,1-Networked Game 6/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Loading the Lobby."
align = 1

[node name="Header2" parent="5,1-Networked Game 6" instance=ExtResource( 7 )]
my_menu = "5,1"

[node name="0,3-Custom Setup 1" type="ReferenceRect" parent="."]
margin_top = 2880.0
margin_right = 540.0
margin_bottom = 3840.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="0,3-Custom Setup 1"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="0,3-Custom Setup 1/CenterContainer"]
margin_top = 214.0
margin_right = 540.0
margin_bottom = 346.0

[node name="Label" type="Label" parent="0,3-Custom Setup 1/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
rect_min_size = Vector2( 540, 0 )
text = "Custom Match Setup"
align = 1

[node name="Label2" type="Label" parent="0,3-Custom Setup 1/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Do you want Teams?"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="0,3-Custom Setup 1/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 132.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="0,3-Custom Setup 1/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 181.0
margin_right = 247.0
margin_bottom = 44.0
text = "Yes"
script = SubResource( 41 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button2" type="Button" parent="0,3-Custom Setup 1/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 307.0
margin_right = 359.0
margin_bottom = 44.0
text = "No"
script = SubResource( 42 )

[node name="Header2" parent="0,3-Custom Setup 1" instance=ExtResource( 7 )]
my_menu = "0,3"

[node name="1,3-Custom Setup 2" type="ReferenceRect" parent="."]
margin_left = 540.0
margin_top = 2880.0
margin_right = 1080.0
margin_bottom = 3840.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="1,3-Custom Setup 2"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="1,3-Custom Setup 2/CenterContainer"]
margin_top = 140.0
margin_right = 540.0
margin_bottom = 419.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="1,3-Custom Setup 2/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1
autowrap = true

[node name="Label2" type="Label" parent="1,3-Custom Setup 2/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "How Much Starting Health?"
align = 1

[node name="VBoxContainer" type="VBoxContainer" parent="1,3-Custom Setup 2/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 279.0
rect_min_size = Vector2( 540, 0 )
custom_constants/separation = 30

[node name="PlusMinusWidget" parent="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer" instance=ExtResource( 4 )]
margin_right = 540.0
margin_bottom = 47.0
current_val = 10
allow_zero = false
apply_minimum_value = true
minimum_value = 1
apply_maximum_value = true
maximum_value = 400

[node name="HSlider" type="HSlider" parent="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 77.0
margin_right = 540.0
margin_bottom = 117.0
min_value = 1.0
max_value = 400.0
value = 10.0
rounded = true
tick_count = 29
ticks_on_borders = true

[node name="Button" type="Button" parent="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 147.0
margin_right = 540.0
margin_bottom = 191.0
text = "Submit"
script = SubResource( 43 )

[node name="Header2" parent="1,3-Custom Setup 2" instance=ExtResource( 7 )]
my_menu = "1,3"

[node name="0,4-Custom Setup 1,1" type="ReferenceRect" parent="."]
margin_top = 3840.0
margin_right = 540.0
margin_bottom = 4800.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="0,4-Custom Setup 1,1"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="0,4-Custom Setup 1,1/CenterContainer"]
margin_top = 140.0
margin_right = 540.0
margin_bottom = 419.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1
autowrap = true

[node name="Label2" type="Label" parent="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "How Many Teams?"
align = 1

[node name="VBoxContainer" type="VBoxContainer" parent="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 279.0
rect_min_size = Vector2( 540, 0 )
custom_constants/separation = 30

[node name="PlusMinusWidget" parent="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer" instance=ExtResource( 4 )]
margin_right = 540.0
margin_bottom = 47.0
current_val = 2
allow_zero = false
apply_minimum_value = true
minimum_value = 2
apply_maximum_value = true
maximum_value = 31

[node name="HSlider" type="HSlider" parent="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 77.0
margin_right = 540.0
margin_bottom = 117.0
min_value = 2.0
max_value = 31.0
value = 2.0
rounded = true
tick_count = 29
ticks_on_borders = true

[node name="Button" type="Button" parent="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 147.0
margin_right = 540.0
margin_bottom = 191.0
text = "Submit"
script = SubResource( 44 )

[node name="Header2" parent="0,4-Custom Setup 1,1" instance=ExtResource( 7 )]
my_menu = "0,4"

[node name="0,5-Custom Setup 1,2" type="ReferenceRect" parent="."]
margin_top = 4800.0
margin_right = 540.0
margin_bottom = 5760.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="0,5-Custom Setup 1,2"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="0,5-Custom Setup 1,2/CenterContainer"]
margin_top = 175.0
margin_right = 540.0
margin_bottom = 385.0

[node name="Label" type="Label" parent="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
rect_min_size = Vector2( 540, 0 )
text = "Custom Match Setup"
align = 1

[node name="Label2" type="Label" parent="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 158.0
text = "Should Friendly Fire be possible? Should team mates be able to shoot each other?"
align = 1
autowrap = true

[node name="HBoxContainer" type="HBoxContainer" parent="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer"]
margin_top = 166.0
margin_right = 540.0
margin_bottom = 210.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 181.0
margin_right = 247.0
margin_bottom = 44.0
text = "Yes"
script = SubResource( 45 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button2" type="Button" parent="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 307.0
margin_right = 359.0
margin_bottom = 44.0
text = "No"
script = SubResource( 46 )

[node name="Header2" parent="0,5-Custom Setup 1,2" instance=ExtResource( 7 )]
my_menu = "0,5"

[node name="3,4-Custom Setup 4,1" type="ReferenceRect" parent="."]
margin_left = 1620.0
margin_top = 3840.0
margin_right = 2160.0
margin_bottom = 4800.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="3,4-Custom Setup 4,1"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="3,4-Custom Setup 4,1/CenterContainer"]
margin_top = 140.0
margin_right = 540.0
margin_bottom = 419.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1
autowrap = true

[node name="Label2" type="Label" parent="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "How Many Deaths?"
align = 1

[node name="VBoxContainer" type="VBoxContainer" parent="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 279.0
rect_min_size = Vector2( 540, 0 )
custom_constants/separation = 30

[node name="PlusMinusWidget" parent="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer" instance=ExtResource( 4 )]
margin_right = 540.0
margin_bottom = 47.0
current_val = 2
allow_zero = false
apply_minimum_value = true
minimum_value = 1
apply_maximum_value = true
maximum_value = 999

[node name="HSlider" type="HSlider" parent="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 77.0
margin_right = 540.0
margin_bottom = 117.0
min_value = 1.0
max_value = 999.0
value = 2.0
rounded = true
tick_count = 20
ticks_on_borders = true

[node name="Button" type="Button" parent="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 147.0
margin_right = 540.0
margin_bottom = 191.0
text = "Submit"
script = SubResource( 47 )

[node name="Header2" parent="3,4-Custom Setup 4,1" instance=ExtResource( 7 )]
my_menu = "3,4"

[node name="3,5-Custom Setup 4,2" type="ReferenceRect" parent="."]
margin_left = 1620.0
margin_top = 4800.0
margin_right = 2160.0
margin_bottom = 5760.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="3,5-Custom Setup 4,2"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="3,5-Custom Setup 4,2/CenterContainer"]
margin_top = 140.0
margin_right = 540.0
margin_bottom = 419.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1
autowrap = true

[node name="Label2" type="Label" parent="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "How Much Play Time In Minutes?"
align = 1
autowrap = true

[node name="VBoxContainer" type="VBoxContainer" parent="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 279.0
rect_min_size = Vector2( 540, 0 )
custom_constants/separation = 30

[node name="PlusMinusWidget" parent="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer" instance=ExtResource( 4 )]
margin_right = 540.0
margin_bottom = 47.0
current_val = 15
allow_zero = false
apply_minimum_value = true
minimum_value = 1
apply_maximum_value = true
maximum_value = 1440

[node name="HSlider" type="HSlider" parent="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 77.0
margin_right = 540.0
margin_bottom = 117.0
min_value = 1.0
max_value = 1440.0
value = 15.0
rounded = true
tick_count = 20
ticks_on_borders = true

[node name="Button" type="Button" parent="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 147.0
margin_right = 540.0
margin_bottom = 191.0
text = "Submit"
script = SubResource( 48 )

[node name="Header2" parent="3,5-Custom Setup 4,2" instance=ExtResource( 7 )]
my_menu = "3,5"

[node name="2,3-Custom Setup 3" type="ReferenceRect" parent="."]
margin_left = 1080.0
margin_top = 2880.0
margin_right = 1620.0
margin_bottom = 3840.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="2,3-Custom Setup 3"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="2,3-Custom Setup 3/CenterContainer"]
margin_top = 214.0
margin_right = 540.0
margin_bottom = 346.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="2,3-Custom Setup 3/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1

[node name="Label2" type="Label" parent="2,3-Custom Setup 3/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Playing Indoors or Outdoors?"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="2,3-Custom Setup 3/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 132.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="2,3-Custom Setup 3/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 94.0
margin_right = 230.0
margin_bottom = 44.0
text = "Indoors"
script = SubResource( 49 )

[node name="Button2" type="Button" parent="2,3-Custom Setup 3/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 290.0
margin_right = 446.0
margin_bottom = 44.0
text = "Outdoors"
script = SubResource( 50 )

[node name="Header2" parent="2,3-Custom Setup 3" instance=ExtResource( 7 )]
my_menu = "2,3"

[node name="3,3-Custom Setup 4" type="ReferenceRect" parent="."]
margin_left = 1620.0
margin_top = 2880.0
margin_right = 2160.0
margin_bottom = 3840.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="3,3-Custom Setup 4"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="3,3-Custom Setup 4/CenterContainer"]
margin_top = 214.0
margin_right = 540.0
margin_bottom = 346.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="3,3-Custom Setup 4/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1

[node name="Label2" type="Label" parent="3,3-Custom Setup 4/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Which End Game Objective?"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="3,3-Custom Setup 4/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 132.0
custom_constants/separation = 60
alignment = 1

[node name="Button" type="Button" parent="3,3-Custom Setup 4/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 65.0
margin_right = 247.0
margin_bottom = 44.0
custom_constants/hseparation = 60
text = "Death Limit"
script = SubResource( 51 )

[node name="Button2" type="Button" parent="3,3-Custom Setup 4/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 307.0
margin_right = 474.0
margin_bottom = 44.0
text = "Time Limit"
script = SubResource( 52 )

[node name="Header2" parent="3,3-Custom Setup 4" instance=ExtResource( 7 )]
my_menu = "3,3"

[node name="4,3-Custom Setup 5" type="ReferenceRect" parent="."]
margin_left = 2160.0
margin_top = 2880.0
margin_right = 2700.0
margin_bottom = 3840.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="4,3-Custom Setup 5"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="4,3-Custom Setup 5/CenterContainer"]
margin_top = 214.0
margin_right = 540.0
margin_bottom = 346.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="4,3-Custom Setup 5/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1

[node name="Label2" type="Label" parent="4,3-Custom Setup 5/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Respawn via a button or a timer?"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="4,3-Custom Setup 5/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 132.0
custom_constants/separation = 38
alignment = 1

[node name="Button" type="Button" parent="4,3-Custom Setup 5/CenterContainer/VBoxContainer/HBoxContainer"]
margin_right = 257.0
margin_bottom = 44.0
custom_constants/hseparation = 60
text = "Respawn Button"
script = SubResource( 53 )

[node name="Button2" type="Button" parent="4,3-Custom Setup 5/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 295.0
margin_right = 540.0
margin_bottom = 44.0
text = "Respawn Timer"
script = SubResource( 54 )

[node name="Header2" parent="4,3-Custom Setup 5" instance=ExtResource( 7 )]
my_menu = "3,3"

[node name="4,4-Custom Setup 5,1" type="ReferenceRect" parent="."]
margin_left = 2160.0
margin_top = 3840.0
margin_right = 2700.0
margin_bottom = 4800.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="4,4-Custom Setup 5,1"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="4,4-Custom Setup 5,1/CenterContainer"]
margin_top = 121.0
margin_right = 540.0
margin_bottom = 439.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Custom Match Setup"
align = 1

[node name="Label2" type="Label" parent="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 119.0
text = "How long of a respawn delay in seconds?"
align = 1
autowrap = true

[node name="VBoxContainer" type="VBoxContainer" parent="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer"]
margin_top = 127.0
margin_right = 540.0
margin_bottom = 318.0
custom_constants/separation = 30

[node name="PlusMinusWidget" parent="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer" instance=ExtResource( 4 )]
margin_right = 540.0
margin_bottom = 47.0
current_val = 15
allow_zero = false
apply_minimum_value = true
minimum_value = 1
apply_maximum_value = true
maximum_value = 600

[node name="HSlider" type="HSlider" parent="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 77.0
margin_right = 540.0
margin_bottom = 117.0
min_value = 1.0
max_value = 600.0
value = 15.0
rounded = true
tick_count = 20
ticks_on_borders = true

[node name="Button" type="Button" parent="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer"]
margin_top = 147.0
margin_right = 540.0
margin_bottom = 191.0
text = "Submit"
script = SubResource( 55 )

[node name="Header2" parent="4,4-Custom Setup 5,1" instance=ExtResource( 7 )]
my_menu = "4,4"

[node name="0,6-Custom Setup 6" type="ReferenceRect" parent="."]
margin_top = 5760.0
margin_right = 540.0
margin_bottom = 6720.0
rect_min_size = Vector2( 540, 960 )
script = SubResource( 56 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="0,6-Custom Setup 6"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 958.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="0,6-Custom Setup 6/CenterContainer"]
margin_right = 540.0
margin_bottom = 838.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Weapons Configuration"
align = 1

[node name="Label2" type="Label" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Enable Weapons For The Match"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 124.0
custom_constants/separation = 15

[node name="Label" type="Label" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer/HBoxContainer"]
margin_right = 192.0
margin_bottom = 36.0
text = "Designation"

[node name="Label2" type="Label" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 207.0
margin_right = 374.0
margin_bottom = 36.0
text = "Start With"

[node name="Label3" type="Label" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 390.0
margin_right = 540.0
margin_bottom = 36.0
size_flags_horizontal = 10
text = "Available"

[node name="ScrollContainer" type="ScrollContainer" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer"]
margin_top = 132.0
margin_right = 540.0
margin_bottom = 748.0
rect_min_size = Vector2( 540, 616 )
scroll_horizontal_enabled = false

[node name="GridContainer" type="GridContainer" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer/ScrollContainer"]
margin_right = 540.0
rect_min_size = Vector2( 540, 0 )
custom_constants/vseparation = 30
custom_constants/hseparation = 15
columns = 3

[node name="HSeparator" type="HSeparator" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer"]
margin_top = 756.0
margin_right = 540.0
margin_bottom = 786.0
custom_constants/separation = 30

[node name="Button" type="Button" parent="0,6-Custom Setup 6/CenterContainer/VBoxContainer"]
margin_top = 794.0
margin_right = 540.0
margin_bottom = 838.0
text = "Submit Settings"
script = SubResource( 57 )

[node name="Header2" parent="0,6-Custom Setup 6" instance=ExtResource( 7 )]
my_menu = "0,6"

[node name="1,6-Custom Setup 7" type="ReferenceRect" parent="."]
margin_left = 540.0
margin_top = 5760.0
margin_right = 1080.0
margin_bottom = 6720.0
rect_min_size = Vector2( 540, 960 )
script = SubResource( 58 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="1,6-Custom Setup 7"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 958.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="1,6-Custom Setup 7/CenterContainer"]
margin_right = 540.0
margin_bottom = 838.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Weapons Configuration"
align = 1

[node name="Label2" type="Label" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Set Ammo For Starting Weapons"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 124.0
custom_constants/separation = 15

[node name="Label" type="Label" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer/HBoxContainer"]
margin_right = 192.0
margin_bottom = 36.0
text = "Designation"

[node name="Label2" type="Label" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 207.0
margin_right = 395.0
margin_bottom = 36.0
rect_min_size = Vector2( 188, 0 )
text = "Slider"
align = 1

[node name="Label3" type="Label" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 410.0
margin_right = 540.0
margin_bottom = 36.0
size_flags_horizontal = 10
text = "Amount"

[node name="ScrollContainer" type="ScrollContainer" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer"]
margin_top = 132.0
margin_right = 540.0
margin_bottom = 748.0
rect_min_size = Vector2( 540, 616 )
scroll_horizontal_enabled = false

[node name="GridContainer" type="GridContainer" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer/ScrollContainer"]
margin_right = 540.0
rect_min_size = Vector2( 540, 0 )
custom_constants/vseparation = 30
custom_constants/hseparation = 15
columns = 3

[node name="HSeparator" type="HSeparator" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer"]
margin_top = 756.0
margin_right = 540.0
margin_bottom = 786.0
custom_constants/separation = 30

[node name="Button" type="Button" parent="1,6-Custom Setup 7/CenterContainer/VBoxContainer"]
margin_top = 794.0
margin_right = 540.0
margin_bottom = 838.0
text = "Submit Settings"
script = SubResource( 59 )

[node name="Header2" parent="1,6-Custom Setup 7" instance=ExtResource( 7 )]
my_menu = "1,6"

[node name="2,6-Custom Setup 8" type="ReferenceRect" parent="."]
margin_left = 1080.0
margin_top = 5760.0
margin_right = 1620.0
margin_bottom = 6720.0
rect_min_size = Vector2( 540, 960 )
script = SubResource( 60 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="2,6-Custom Setup 8"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 958.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="2,6-Custom Setup 8/CenterContainer"]
margin_right = 540.0
margin_bottom = 838.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Weapons Configuration"
align = 1

[node name="Label2" type="Label" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Set Ammo For Picked Up Weapons"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 124.0
custom_constants/separation = 15

[node name="Label" type="Label" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer/HBoxContainer"]
margin_right = 192.0
margin_bottom = 36.0
text = "Designation"

[node name="Label2" type="Label" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 207.0
margin_right = 395.0
margin_bottom = 36.0
rect_min_size = Vector2( 188, 0 )
text = "Slider"
align = 1

[node name="Label3" type="Label" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 410.0
margin_right = 540.0
margin_bottom = 36.0
size_flags_horizontal = 10
text = "Amount"

[node name="ScrollContainer" type="ScrollContainer" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer"]
margin_top = 132.0
margin_right = 540.0
margin_bottom = 748.0
rect_min_size = Vector2( 540, 616 )
scroll_horizontal_enabled = false

[node name="GridContainer" type="GridContainer" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer/ScrollContainer"]
margin_right = 540.0
rect_min_size = Vector2( 540, 0 )
custom_constants/vseparation = 30
custom_constants/hseparation = 15
columns = 3

[node name="HSeparator" type="HSeparator" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer"]
margin_top = 756.0
margin_right = 540.0
margin_bottom = 786.0
custom_constants/separation = 30

[node name="Button" type="Button" parent="2,6-Custom Setup 8/CenterContainer/VBoxContainer"]
margin_top = 794.0
margin_right = 540.0
margin_bottom = 838.0
text = "Submit Settings"
script = SubResource( 61 )

[node name="Header2" parent="2,6-Custom Setup 8" instance=ExtResource( 7 )]
my_menu = "2,6"

[node name="3,6-Custom Setup 9" type="ReferenceRect" parent="."]
margin_left = 1620.0
margin_top = 5760.0
margin_right = 2160.0
margin_bottom = 6720.0
rect_min_size = Vector2( 540, 960 )
script = SubResource( 62 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="3,6-Custom Setup 9"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 958.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="3,6-Custom Setup 9/CenterContainer"]
margin_right = 540.0
margin_bottom = 838.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Weapons Configuration"
align = 1

[node name="Label2" type="Label" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 80.0
text = "Probability Of Drops"
align = 1

[node name="HBoxContainer" type="HBoxContainer" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 540.0
margin_bottom = 124.0
custom_constants/separation = 15

[node name="Label" type="Label" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/HBoxContainer"]
margin_right = 192.0
margin_bottom = 36.0
text = "Designation"

[node name="Label2" type="Label" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/HBoxContainer"]
margin_left = 207.0
margin_right = 525.0
margin_bottom = 36.0
rect_min_size = Vector2( 318, 0 )
text = "Probability"
align = 1

[node name="ScrollContainer" type="ScrollContainer" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer"]
margin_top = 132.0
margin_right = 540.0
margin_bottom = 748.0
rect_min_size = Vector2( 540, 616 )
scroll_horizontal_enabled = false

[node name="GridContainer" type="GridContainer" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer"]
margin_right = 540.0
margin_bottom = 188.0
rect_min_size = Vector2( 540, 0 )
custom_constants/vseparation = 30
custom_constants/hseparation = 15
columns = 3

[node name="Label4" type="Label" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_top = 4.0
margin_right = 192.0
margin_bottom = 40.0
rect_min_size = Vector2( 192, 0 )
text = "P1S"

[node name="HSlider" type="HSlider" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_left = 207.0
margin_right = 387.0
margin_bottom = 40.0
rect_min_size = Vector2( 180, 0 )
value = 50.0
rounded = true

[node name="LineEdit" type="LineEdit" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_left = 402.0
margin_right = 498.0
margin_bottom = 44.0
align = 2

[node name="Label5" type="Label" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_top = 78.0
margin_right = 192.0
margin_bottom = 114.0
rect_min_size = Vector2( 192, 0 )
text = "P2B"

[node name="HSlider2" type="HSlider" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_left = 207.0
margin_top = 74.0
margin_right = 387.0
margin_bottom = 114.0
rect_min_size = Vector2( 180, 0 )
value = 50.0

[node name="LineEdit2" type="LineEdit" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_left = 402.0
margin_top = 74.0
margin_right = 498.0
margin_bottom = 118.0
align = 2

[node name="Label6" type="Label" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_top = 150.0
margin_right = 192.0
margin_bottom = 186.0
rect_min_size = Vector2( 192, 0 )
text = "P3A"

[node name="HSlider3" type="HSlider" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer/ScrollContainer/GridContainer"]
margin_left = 207.0
margin_top = 148.0
margin_right = 387.0
margin_bottom = 188.0
rect_min_size = Vector2( 180, 0 )
max_value = 1000.0
value = 100.0

[node name="HSeparator" type="HSeparator" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer"]
margin_top = 756.0
margin_right = 540.0
margin_bottom = 786.0
custom_constants/separation = 30

[node name="Button" type="Button" parent="3,6-Custom Setup 9/CenterContainer/VBoxContainer"]
margin_top = 794.0
margin_right = 540.0
margin_bottom = 838.0
text = "Submit Settings"

[node name="Header2" parent="3,6-Custom Setup 9" instance=ExtResource( 7 )]
my_menu = "3,6"

[node name="0,2-No Network Game 1" type="ReferenceRect" parent="."]
margin_top = 1920.0
margin_right = 540.0
margin_bottom = 2880.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="1,0-Quick Start" type="ReferenceRect" parent="."]
margin_left = 540.0
margin_right = 1080.0
margin_bottom = 960.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="-1,1-Networked IP Conflict" type="ReferenceRect" parent="."]
margin_left = -540.0
margin_top = 960.0
margin_bottom = 1920.0
rect_min_size = Vector2( 540, 960 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="-1,1-Networked IP Conflict"]
margin_top = 120.0
margin_right = 540.0
margin_bottom = 680.0
rect_min_size = Vector2( 540, 560 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="-1,1-Networked IP Conflict/CenterContainer"]
margin_top = 70.0
margin_right = 540.0
margin_bottom = 489.0
rect_min_size = Vector2( 540, 0 )

[node name="Label" type="Label" parent="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer"]
margin_right = 540.0
margin_bottom = 36.0
text = "Network Game Setup"
align = 1

[node name="Label2" type="Label" parent="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 540.0
margin_bottom = 119.0
text = "An IP Address Conflict has been detected. "
align = 1
autowrap = true

[node name="OptionButton" type="OptionButton" parent="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer"]
margin_top = 127.0
margin_right = 540.0
margin_bottom = 171.0
align = 1
script = SubResource( 63 )

[node name="Label3" type="Label" parent="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer"]
margin_top = 179.0
margin_right = 540.0
margin_bottom = 371.0
text = "NOTE: The program has the ability to work around this. If you experience trouble please contact FeralBytes on discord and let him know of the issue."
align = 1
autowrap = true

[node name="RichTextLabel" type="RichTextLabel" parent="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer"]
margin_top = 379.0
margin_right = 540.0
margin_bottom = 419.0
rect_min_size = Vector2( 540, 40 )
bbcode_enabled = true
bbcode_text = "[center][url=https://discordapp.com/invite/tn4hThV]FreecoiL Discord Link[/url][/center]"
text = "FreecoiL Discord Link"
script = SubResource( 64 )

[node name="Header2" parent="-1,1-Networked IP Conflict" instance=ExtResource( 7 )]
my_menu = "-1,-1"

[node name="EmptyGunShotSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 9 )
[connection signal="pressed" from="-1,-1-Tests2/GunTester/Button5" to="-1,-1-Tests2/GunTester/Button5" method="_on_Button5_pressed"]
[connection signal="PMWidChanged" from="-1,-1-Tests2/GunTester/PlusMinusWidget" to="-1,-1-Tests2/GunTester/Button5" method="_on_PlusMinusWidget_PMWidChanged" flags=3]
[connection signal="pressed" from="-1,-1-Tests2/GunTester/Button6" to="-1,-1-Tests2/GunTester/Button6" method="_on_Button6_pressed" flags=3]
[connection signal="pressed" from="-1,-1-Tests2/GunTester/Button7" to="-1,-1-Tests2/GunTester/Button7" method="_on_Button7_pressed" flags=3]
[connection signal="pressed" from="-1,-1-Tests2/GunTester/Button8" to="-1,-1-Tests2/GunTester/Button8" method="_on_Button8_pressed" flags=3]
[connection signal="text_entered" from="2,-1-Preferences/CenterContainer/VBoxContainer/HBoxContainer/PlayerName" to="2,-1-Preferences/CenterContainer/VBoxContainer/HBoxContainer/PlayerName" method="_on_PlayerName_text_entered" flags=3]
[connection signal="pressed" from="2,-1-Preferences/CenterContainer/VBoxContainer/Button" to="2,-1-Preferences/CenterContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="text_entered" from="0,-1-Get Player Name/CenterContainer/VBoxContainer/VBoxContainer/LineEdit" to="0,-1-Get Player Name/CenterContainer/VBoxContainer/VBoxContainer/LineEdit" method="_on_LineEdit_text_entered" flags=3]
[connection signal="pressed" from="0,-1-Get Player Name/CenterContainer/VBoxContainer/VBoxContainer/Button" to="0,-1-Get Player Name/CenterContainer/VBoxContainer/VBoxContainer/LineEdit" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer/Button2" to="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="pressed" from="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer/Button4" to="0,0-Game Options/CenterContainer/VBoxContainer/VBoxContainer/Button4" method="_on_Button4_pressed" flags=3]
[connection signal="pressed" from="0,1-Networked Game 1/CenterContainer/VBoxContainer/HBoxContainer/Button" to="0,1-Networked Game 1/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="0,1-Networked Game 1/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="0,1-Networked Game 1/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="pressed" from="1,1-Networked Game 2/CenterContainer/VBoxContainer/HBoxContainer/Button" to="1,1-Networked Game 2/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="1,1-Networked Game 2/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="1,1-Networked Game 2/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="pressed" from="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer/Button" to="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="pressed" from="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer2/Button" to="2,1-Networked Game 3/CenterContainer/VBoxContainer/HBoxContainer2/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="3,1-Networked Game 4/CenterContainer/VBoxContainer/Button" to="3,1-Networked Game 4/CenterContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="0,3-Custom Setup 1/CenterContainer/VBoxContainer/HBoxContainer/Button" to="0,3-Custom Setup 1/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="0,3-Custom Setup 1/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="0,3-Custom Setup 1/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="PMWidChanged" from="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer/PlusMinusWidget" to="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_PlusMinusWidget_PMWidChanged" flags=3]
[connection signal="value_changed" from="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer/HSlider" to="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_HSlider_value_changed" flags=3]
[connection signal="pressed" from="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer/Button" to="1,3-Custom Setup 2/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="PMWidChanged" from="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer/PlusMinusWidget" to="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_PlusMinusWidget_PMWidChanged" flags=3]
[connection signal="value_changed" from="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer/HSlider" to="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_HSlider_value_changed" flags=3]
[connection signal="pressed" from="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer/Button" to="0,4-Custom Setup 1,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer/HBoxContainer/Button" to="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="0,5-Custom Setup 1,2/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="PMWidChanged" from="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer/PlusMinusWidget" to="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_PlusMinusWidget_PMWidChanged" flags=3]
[connection signal="value_changed" from="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer/HSlider" to="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_HSlider_value_changed" flags=3]
[connection signal="pressed" from="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer/Button" to="3,4-Custom Setup 4,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="PMWidChanged" from="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer/PlusMinusWidget" to="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_PlusMinusWidget_PMWidChanged" flags=3]
[connection signal="value_changed" from="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer/HSlider" to="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_HSlider_value_changed" flags=3]
[connection signal="pressed" from="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer/Button" to="3,5-Custom Setup 4,2/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="2,3-Custom Setup 3/CenterContainer/VBoxContainer/HBoxContainer/Button" to="2,3-Custom Setup 3/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="2,3-Custom Setup 3/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="2,3-Custom Setup 3/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="pressed" from="3,3-Custom Setup 4/CenterContainer/VBoxContainer/HBoxContainer/Button" to="3,3-Custom Setup 4/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="3,3-Custom Setup 4/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="3,3-Custom Setup 4/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="pressed" from="4,3-Custom Setup 5/CenterContainer/VBoxContainer/HBoxContainer/Button" to="4,3-Custom Setup 5/CenterContainer/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="4,3-Custom Setup 5/CenterContainer/VBoxContainer/HBoxContainer/Button2" to="4,3-Custom Setup 5/CenterContainer/VBoxContainer/HBoxContainer/Button2" method="_on_Button2_pressed" flags=3]
[connection signal="PMWidChanged" from="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer/PlusMinusWidget" to="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_PlusMinusWidget_PMWidChanged" flags=3]
[connection signal="value_changed" from="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer/HSlider" to="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_HSlider_value_changed" flags=3]
[connection signal="pressed" from="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer/Button" to="4,4-Custom Setup 5,1/CenterContainer/VBoxContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="0,6-Custom Setup 6/CenterContainer/VBoxContainer/Button" to="0,6-Custom Setup 6/CenterContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="1,6-Custom Setup 7/CenterContainer/VBoxContainer/Button" to="1,6-Custom Setup 7/CenterContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="pressed" from="2,6-Custom Setup 8/CenterContainer/VBoxContainer/Button" to="2,6-Custom Setup 8/CenterContainer/VBoxContainer/Button" method="_on_Button_pressed" flags=3]
[connection signal="item_selected" from="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer/OptionButton" to="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer/OptionButton" method="_on_OptionButton_item_selected" flags=3]
[connection signal="pressed" from="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer/OptionButton" to="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer/OptionButton" method="_on_OptionButton_pressed" flags=3]
[connection signal="meta_clicked" from="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer/RichTextLabel" to="-1,1-Networked IP Conflict/CenterContainer/VBoxContainer/RichTextLabel" method="_on_RichTextLabel_meta_clicked" flags=3]
