[gd_scene load_steps=4 format=2]

[ext_resource path="res://addons/regular_polygon2d_node/RegularPolygon2D.gd" type="Script" id=1]
[ext_resource path="res://assets/images/staticmap.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

const RADAR_PULSE_RATE = 0.2

var player_position = {}
var count = 0
var last_downloaded_tile_coords

onready var Radar = get_node(\"Hexagon2/PlayerMarker/Radar\")
onready var RadarPulseTimer = get_node(\"RadarPulse\")
onready var MapDownloader = get_node(\"MapDownloader\")
onready var CenterTile = get_node(\"MapMoverContainer/Center\")
onready var Geodetic = preload(\"res://code/Geodetic.gd\").new()
onready var RegularPolygon2D = preload(\"res://addons/regular_polygon2d_node/RegularPolygon2D.gd\")
onready var MapContainer = get_node(\"MapMoverContainer\")

# Called when the node enters the scene tree for the first time.
func _ready():
    var current_location = Settings.Session.get_data(\"fi_current_location\")
    if current_location == null: # Testing
        current_location = {\"latitude\": 41.850004, \"longitude\": -87.6521887}
        # API Key gets set here in testing.
    Geodetic.set_map_origin(current_location[\"latitude\"], current_location[\"longitude\"], 19)
    player_position[\"latitude\"] = current_location[\"latitude\"]
    player_position[\"longitude\"] = current_location[\"longitude\"]
    RadarPulseTimer.wait_time = RADAR_PULSE_RATE
    RadarPulseTimer.connect(\"timeout\", self, \"pulse_radar\")
    RadarPulseTimer.start(RadarPulseTimer.wait_time)
    if check_for_existing_maps():
        # Need to check if the existing tiles meet the needs of the current map origin.
        var existing_close_tile = check_if_existing_tile_is_close()
        if existing_close_tile == false:
            pass  # Download new maps instead.
           else:
            pass  # Need to check if we have the neighbor tiles.
    else:
        MapDownloader.connect(\"request_completed\", self, \"map_tile_downloaded\")
        last_downloaded_tile_coords = [current_location[\"latitude\"], current_location[\"longitude\"]]
        var http_error = MapDownloader.request(\"https://maps.googleapis.com/maps/api/staticmap?center=\" + 
            str(current_location[\"latitude\"]) + \",\" + str(current_location[\"longitude\"]) + 
            \"&zoom=19&scale=1&size=640x640&maptype=hybrid&key=\" + FreecoiLInterface.API_KEY)
        if http_error != OK:
            print(\"An error occurred in the HTTP request.\")

func map_tile_downloaded(result, response_code, headers, body):
    var image = Image.new()
    var image_error = image.load_png_from_buffer(body)
    if image_error != OK:
        print(\"An error occurred while trying to display the image.\")
        print(result)
        print(response_code)
        print(headers)
        print(body)
    else:
        save_map_tile(body, last_downloaded_tile_coords)
        var texture = ImageTexture.new()
        texture.create_from_image(image)
        CenterTile.texture = texture

func pulse_radar():
    running_test()
    Radar.visible = true
    while true:
        if Radar.size > 600:
            Radar.size = 10
            Radar.visible = false
            RadarPulseTimer.start(RadarPulseTimer.wait_time)
            break
        else:
            Radar.size += 5
            yield(get_tree().create_timer(0.01), \"timeout\")

func running_test():
    player_position[\"latitude\"] -= 0.000001
    #player_position[\"longitude\"] -= 0.000001
    var map_container_new_xy = Geodetic.calc_map_movement(player_position[\"latitude\"], player_position[\"longitude\"], 19)
    print(str(player_position) + \"  | \" + str(map_container_new_xy))
    MapContainer.position.x = map_container_new_xy[0]
    MapContainer.position.y = map_container_new_xy[1]
    if count == 30:
        test_add_another_marker()
        count = 0
    else:
        count += 1

func test_add_another_marker():
    var new_marker_pos = {\"latitude\": player_position[\"latitude\"], \"longitude\": player_position[\"longitude\"] + 0.000005}
    var marker = RegularPolygon2D.new()
    CenterTile.add_child(marker)
    var new_marker_px_pos = Geodetic.plot_entity(new_marker_pos[\"latitude\"], new_marker_pos[\"longitude\"], 19)
    marker.position = Vector2(new_marker_px_pos[0], new_marker_px_pos[1])
    print(\"marker data\")
    print(marker.position)
    print(new_marker_pos)
    marker.num_sides = 10
    marker.size = 26
    marker.polygon_color = Color(Color.crimson)

func check_for_existing_maps():
    var files = Helpers.list_files_in_directory(\"user://maps/\")
    if files == []:
        return false
    else:
        return true
        
func get_existing_map_tiles():
    return Helpers.list_files_in_directory(\"user://maps/\")

func save_map_tile(map_tile_buffer, tile_coords):
    var dir_check = Directory.new()
    dir_check.open(\"user://\")
    if not dir_check.dir_exists(\"user://maps/\"):
        dir_check.make_dir(\"user://maps/\")
    var map_tile_as_file = File.new()
    var file_name = str(tile_coords[0]) + \",\" + str(tile_coords[1]) + \".png\"
    map_tile_as_file.open(\"user://maps/\" + file_name, File.WRITE)
    map_tile_as_file.store_buffer(map_tile_buffer)
    map_tile_as_file.close()
    
func check_if_existing_tile_is_close():
    var saved_tiles = get_existing_map_tiles()
    var coordinates_only = []
    var coords_split = []
    var range
    var count = 0
    for tile in saved_tiles:
        coordinates_only.append(tile.rstrip(\".png\"))
    for coords in coordinates_only:
        coords_split = coords.split(\",\")
        range = Geodetic.haversine_v0(Geodetic.map_origin_lat, Geodetic.map_origin_long, coords_split[0], coords_split[1])
        if range < (Geodetic.get_meters_per_pixel(19, Geodetic.map_origin_lat) * 320):
            return saved_tiles[count]
        count += 1
     return false
    
"

[node name="MapController" type="Node2D"]
script = SubResource( 1 )

[node name="MapMoverContainer" type="Node2D" parent="."]

[node name="Center" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
texture = ExtResource( 2 )
offset = Vector2( 270, 403 )

[node name="MapOrigin" type="Node2D" parent="MapMoverContainer/Center"]
script = ExtResource( 1 )
centered = true
num_sides = 5
size = 20.0
polygon_color = Color( 0.992157, 0.992157, 0.992157, 1 )
border_color = Color( 0.258824, 0.258824, 0.258824, 1 )

[node name="West" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( -370, 403 )
texture = ExtResource( 2 )

[node name="NorthWest" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( -370, -237 )
texture = ExtResource( 2 )

[node name="North" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( 270, -237 )
texture = ExtResource( 2 )

[node name="NorthEast" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( 910, -237 )
texture = ExtResource( 2 )

[node name="East" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( 910, 403 )
texture = ExtResource( 2 )

[node name="SouthEast" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( 910, 1043 )
texture = ExtResource( 2 )

[node name="South" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( 270, 1043 )
texture = ExtResource( 2 )

[node name="SouthWest" type="Sprite" parent="MapMoverContainer"]
show_behind_parent = true
position = Vector2( -370, 1043 )
texture = ExtResource( 2 )

[node name="Hexagon2" type="Node2D" parent="."]
position = Vector2( 270, 403 )
rotation = 1.5708
script = ExtResource( 1 )
__meta__ = {
"_editor_description_": "Rotation is 90 so transforms are backwards!"
}
centered = true
num_sides = 6
size = 540.0
polygon_color = Color( 1, 1, 1, 0 )
border_size = 0.0

[node name="PlayerMarker" type="Node2D" parent="Hexagon2"]
script = ExtResource( 1 )
centered = true
size = 26.0
polygon_color = Color( 0, 0.0941176, 0.847059, 1 )
border_size = 0.0
border_color = Color( 0, 0.0941176, 0.847059, 1 )
polygon_rotation = -90.0

[node name="Radar" type="Node2D" parent="Hexagon2/PlayerMarker"]
visible = false
show_behind_parent = true
script = ExtResource( 1 )
centered = true
num_sides = 6
size = 10.0
polygon_color = Color( 0, 0.0156863, 1, 0.121569 )
border_size = 2.0
border_color = Color( 0, 0.0156863, 1, 0.231373 )

[node name="BlockingNodes" type="Node2D" parent="."]

[node name="BlockingTriangle" type="Node2D" parent="BlockingNodes"]
position = Vector2( 874, -471 )
rotation = 1.0472
script = ExtResource( 1 )
size = 960.0
polygon_color = Color( 0, 0, 0, 1 )

[node name="BlockingTriangle2" type="Node2D" parent="BlockingNodes"]
position = Vector2( 21, -471 )
rotation = 1.0472
script = ExtResource( 1 )
size = 960.0
polygon_color = Color( 0, 0, 0, 1 )

[node name="BlockingTriangle3" type="Node2D" parent="BlockingNodes"]
position = Vector2( 448, 218 )
rotation = 1.0472
script = ExtResource( 1 )
size = 960.0
polygon_color = Color( 0, 0, 0, 1 )

[node name="BlockingTriangle4" type="Node2D" parent="BlockingNodes"]
position = Vector2( 90, 588 )
rotation = -2.09439
script = ExtResource( 1 )
size = 960.0
polygon_color = Color( 0, 0, 0, 1 )

[node name="BlockingTriangle5" type="Node2D" parent="BlockingNodes"]
position = Vector2( 516, 1284 )
rotation = -2.09439
script = ExtResource( 1 )
size = 960.0
polygon_color = Color( 0, 0, 0, 1 )

[node name="BlockingTriangle6" type="Node2D" parent="BlockingNodes"]
position = Vector2( -330, 1284 )
rotation = -2.09439
script = ExtResource( 1 )
size = 960.0
polygon_color = Color( 0, 0, 0, 1 )

[node name="LeftRect" type="Node2D" parent="BlockingNodes"]
position = Vector2( -1822, 432 )
script = ExtResource( 1 )
centered = true
num_sides = 4
size = 4320.0
polygon_color = Color( 0, 0, 0, 1 )
polygon_rotation = 45.0

[node name="RightRect" type="Node2D" parent="BlockingNodes"]
position = Vector2( 2374, 408 )
script = ExtResource( 1 )
centered = true
num_sides = 4
size = 4320.0
polygon_color = Color( 0, 0, 0, 1 )
polygon_rotation = 45.0

[node name="TopRect" type="Node2D" parent="BlockingNodes"]
position = Vector2( 286, -1542 )
script = ExtResource( 1 )
centered = true
num_sides = 4
size = 4320.0
polygon_color = Color( 0, 0, 0, 1 )
polygon_rotation = 45.0

[node name="BottomRect" type="Node2D" parent="BlockingNodes"]
position = Vector2( 334, 2354 )
script = ExtResource( 1 )
centered = true
num_sides = 4
size = 4320.0
polygon_color = Color( 0, 0, 0, 1 )
polygon_rotation = 45.0

[node name="RadarPulse" type="Timer" parent="."]
wait_time = 6.0
one_shot = true

[node name="MapDownloader" type="HTTPRequest" parent="."]
use_threads = true
timeout = 30
