# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: myood/godot-ci-android-export:godot-3.2.2

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        export DOCKER_HOME=$PWD
        pwd
        apt-get update
        apt-get install -y python3 gradle
        mkdir -p ~/.config/godot/projects
        mkdir -p ~/.godot
        mkdir -p ~/.local/share/godot
        mkdir -p ~/.cache
        cp $DOCKER_HOME/.gitlab/ci_scripts/editor_settings-3.tres /root/.config/godot/editor_settings-3.tres
        export APP_NAME=FreecoiL
        # This is simply (semi-manual :-)) double-check if editor settings are OK for debug export
        grep android /root/.config/godot/editor_settings-3.tres
        ls -l /usr/lib/jvm/java-8-openjdk-amd64/bin/jarsigner
        ls -l /root/android-sdk/
        ls -l /root/android-sdk/debug.keystore
        ls -l /root/android-sdk/cmdline-tools/latest/platform-tools/adb
        ls -l /root/android-sdk/cmdline-tools/latest/build-tools
        ls -l /root/.local/share/godot/templates/3.2.2
        # Quick check if basic settings are properly set
        grep -F "export/android/jarsigner =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
        grep -F "export/android/debug_keystore =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
        grep -F "export/android/adb =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
        grep -F "export/android/custom_build_sdk_path =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
        # Add the right build tools
        set +o pipefail
        yes | ~/android-sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;29.0.3" > /dev/null
        set -o pipefail
        ls -l /root/android-sdk/cmdline-tools/latest/build-tools
        # Prevent android build gradlew from failing due to not executable
        chmod +x android/build/gradlew
        # Export APP_VERSION
        export APP_VERSION=$(python3 .gitlab/ci_scripts/extract_version.py)
        godot --path godot --export-debug "Android" /builds/FeralBytes/FreecoiL/${APP_NAME}-Ver:${APP_VERSION}-debug.apk
